{"version":3,"sources":["userPanel.js","Tournaments.js","Teams.js","Players.js","App.js","serviceWorker.js","index.js"],"names":["Delete","props","state","showModal","email","player","nick","open","bind","close","onValueChanged","delete","key","value","this","setState","dialogError","undefined","appOnValueChanged","call","action","arguments","active","callStr","JSON","stringify","request","XMLHttpRequest","onreadystatechange","readyState","status","console","log","responseText","parse","result","users","send","id","Button","onClick","color","Dialog","onClose","aria-labelledby","maxWidth","fullWidth","DialogTitle","DialogContent","DialogActions","React","Component","Logout","logout","EditProfile","loggedUser","name","surname","password","gender","birthDate","country","editProfile","length","substring","data","response","Box","m","component","display","TextField","label","onChange","e","target","autoFocus","margin","type","select","MenuItem","InputLabelProps","shrink","Register","repeatPassword","errorMessage","register","message","style","Login","login","UserPanel","p","bgcolor","css","float","TournamentBody","teamSize","capacity","prizes","ageCategory","sexCategory","registrationFee","CreateTournament","create","tournaments","variant","EditTournament","tournament","save","newName","SignupAsReferee","join","JoinTournament","teams","loggedUsersTeams","selected","submit","team","handleToggle","currentIndex","indexOf","newChecked","splice","disabled","List","map","labelId","ListItem","role","dense","button","ListItemText","primary","ListItemSecondaryAction","Checkbox","edge","checked","tabIndex","disableRipple","inputProps","Tournaments","body","filter","t","founder","teamsStr","refereesStr","referees","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","ExpansionPanelActions","TournamentPanel","Grid","container","spacing","item","xs","TeamBody","CreateTeam","players","EditTeam","LeaveTeam","JoinTeam","Teams","playersStr","founded","includes","TeamPanel","Edit","edit","Players","refereeRat","actualPRank","highestPRank","PlayerPanel","menu","App","page","className","AppBar","position","Tabs","aria-label","event","Tab","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oZAWMA,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,EACXC,MAAOH,EAAMI,OAAOD,MACpBE,KAAML,EAAMI,OAAOC,MAGvB,EAAKC,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKG,OAAS,EAAKA,OAAOH,KAAZ,gBAZC,E,4EAeJI,EAAKC,GAChBC,KAAKC,SAAL,eAAiBH,EAAMC,M,8BAIvBC,KAAKC,SAAS,CAAEZ,WAAW,EAAOa,iBAAaC,M,6BAI/CH,KAAKC,SAAS,CAAEZ,WAAW,M,+BAI3B,IAAMe,EAAoBJ,KAAKb,MAAMiB,kBADhC,EAEmBJ,KAAKZ,MAEvBiB,EAAO,CACTC,OAAQ,aACRC,UAHS,CAAEjB,MAHV,EAEGA,MACcE,KAHjB,EAEUA,KACagB,OAAQ,IAK9BC,EAAUC,KAAKC,UAAUN,GAEzBO,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,SAC9BC,QAAQC,IAAIlB,KAAKmB,cACAT,KAAKU,MAAMpB,KAAKmB,cAEpBE,QAAQ,CACjBjB,EAAkB,aAAc,MAChC,IAAMQ,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9C,IAAMM,EAAQZ,KAAKU,MAAMpB,KAAKmB,cAC9Bf,EAAkB,QAASkB,KAGnCV,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHmB,EAAQW,KAAK,qDAIzBX,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHwB,QAAQC,IAAIT,GACZG,EAAQW,KAAKd,K,+BAIb,IAAMe,EAAKxB,KAAKb,MAAMqC,GAAK,iBAE3B,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,QAAS1B,KAAKP,KAAMkC,MAAM,aAAlC,UACA,kBAACC,EAAA,EAAD,CAAQnC,KAAMO,KAAKZ,MAAMC,UACrBwC,QAAS7B,KAAKL,MACdmC,kBAAiBN,EAAK,UACtBO,SAAU,KACVC,WAAS,GAET,kBAACC,EAAA,EAAD,CAAaT,GAAIA,EAAK,iBAAtB,oBACA,kBAACU,EAAA,EAAD,mDAGA,kBAACC,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAQD,GAAIA,EAAK,gBAAiBE,QAAS1B,KAAKL,MAAOgC,MAAM,WAA7D,SAGA,kBAACF,EAAA,EAAD,CAAQD,GAAIA,EAAK,iBAAkBE,QAAS1B,KAAKH,OAAQ8B,MAAM,aAA/D,iB,GAnFHS,IAAMC,WA6FrBC,E,YACF,WAAYnD,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,GAGf,EAAKI,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAK6C,OAAS,EAAKA,OAAO7C,KAAZ,gBAVC,E,4EAaJI,EAAKC,GAChBC,KAAKC,SAAL,eAAiBH,EAAMC,M,8BAIvBC,KAAKC,SAAS,CAAEZ,WAAW,EAAOa,iBAAaC,M,6BAI/CH,KAAKC,SAAS,CAAEZ,WAAW,M,+BAI3BW,KAAKb,MAAMiB,kBAAkB,kBAAcD,K,+BAI3C,IAAMqB,EAAKxB,KAAKb,MAAMqC,GAAK,UAE3B,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,QAAS1B,KAAKP,MAAtB,UAGA,kBAACmC,EAAA,EAAD,CAAQnC,KAAMO,KAAKZ,MAAMC,UACrBwC,QAAS7B,KAAKL,MACdmC,kBAAiBN,EAAK,UACtBO,SAAU,KACVC,WAAS,GAET,kBAACC,EAAA,EAAD,CAAaT,GAAIA,EAAK,iBAAtB,UACA,kBAACU,EAAA,EAAD,sCAGA,kBAACC,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAQD,GAAIA,EAAK,gBAAiBE,QAAS1B,KAAKL,MAAOgC,MAAM,WAA7D,SAGA,kBAACF,EAAA,EAAD,CAAQD,GAAIA,EAAK,uBAAwBE,QAAS1B,KAAKuC,OAAQZ,MAAM,WAArE,iB,GApDHS,IAAMC,WA8DrBG,E,YACF,WAAYrD,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,EACXC,MAAOH,EAAMsD,WAAWnD,MACxBE,KAAML,EAAMsD,WAAWjD,KACvBkD,KAAMvD,EAAMsD,WAAWC,KACvBC,QAASxD,EAAMsD,WAAWE,QAC1BC,SAAU,GACVC,OAAQ1D,EAAMsD,WAAWI,OACzBC,UAAW3D,EAAMsD,WAAWK,UAC5BC,QAAS5D,EAAMsD,WAAWM,SAG9B,EAAKtD,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKsD,YAAc,EAAKA,YAAYtD,KAAjB,gBAlBJ,E,4EAqBJI,EAAKC,GACJ,YAARD,GAAqBC,EAAMkD,OAAS,IACpClD,EAAQA,EAAMmD,UAAU,EAAG,IAE/BlD,KAAKC,SAAL,eAAiBH,EAAMC,M,8BAIvBC,KAAKC,SAAS,CAAEZ,WAAW,EAAOa,iBAAaC,M,6BAI/CH,KAAKC,SAAS,CAAEZ,WAAW,M,oCAI3B,IAAMe,EAAoBJ,KAAKb,MAAMiB,kBAD3B,EAEmEJ,KAAKZ,MAA1EE,EAFE,EAEFA,MAAOE,EAFL,EAEKA,KAAMkD,EAFX,EAEWA,KAAMC,EAFjB,EAEiBA,QAASC,EAF1B,EAE0BA,SAAUC,EAFpC,EAEoCA,OAAQC,EAF5C,EAE4CA,UAAWC,EAFvD,EAEuDA,QAC3DI,EAAO,CAAE7D,QAAOE,OAAMkD,OAAMC,UAASE,SAAQC,YAAWC,WAC1DH,EAASK,OAAS,IAClBE,EAAKP,SAAWA,GACpB,IAAMvC,EAAO,CACTC,OAAQ,aACRC,UAAW4C,GAET1C,EAAUC,KAAKC,UAAUN,GAEzBO,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,SAC9BC,QAAQC,IAAIlB,KAAKmB,cACAT,KAAKU,MAAMpB,KAAKmB,cAEpBE,QAAQ,CACjB,IACMhB,EAAO,CACTC,OAAQ,YACRC,UAHS,CAAEjB,UAKTmB,EAAUC,KAAKC,UAAUN,GACzBO,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9C,IAAMoC,EAAW1C,KAAKU,MAAMpB,KAAKmB,cAEjCf,EAAkB,aAAcgD,EAAS,IACzCnC,QAAQC,IAAIkC,EAAS,MAG7BxC,EAAQnB,KAAK,OAAQ,kGAAkG,GAEvHmB,EAAQW,KAAKd,KAIzBG,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHwB,QAAQC,IAAIT,GACZG,EAAQW,KAAKd,K,+BAGP,IAAD,OACCe,EAAKxB,KAAKb,MAAMqC,GAAK,gBAE3B,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,QAAS1B,KAAKP,MAAtB,gBAGA,kBAACmC,EAAA,EAAD,CAAQnC,KAAMO,KAAKZ,MAAMC,UACrBwC,QAAS7B,KAAKL,MACdmC,kBAAiBN,EAAK,UACtBO,SAAU,KACVC,WAAS,GAET,kBAACC,EAAA,EAAD,CAAaT,GAAIA,EAAK,iBAAtB,gBACA,kBAACU,EAAA,EAAD,KACI,kBAACmB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,SAChBkC,MAAM,QACN3D,MAAOC,KAAKZ,MAAME,MAClBqE,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,QAASgE,EAAEC,OAAO9D,QACrD+D,WAAS,EACTC,OAAO,QACP/B,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,QAChBkC,MAAM,OACN3D,MAAOC,KAAKZ,MAAMI,KAClBmE,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,OAAQgE,EAAEC,OAAO9D,QACpDiC,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,QAChBkC,MAAM,OACN3D,MAAOC,KAAKZ,MAAMsD,KAClBiB,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,OAAQgE,EAAEC,OAAO9D,QACpDiC,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,WAChBkC,MAAM,UACN3D,MAAOC,KAAKZ,MAAMuD,QAClBgB,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,UAAWgE,EAAEC,OAAO9D,QACvDiC,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,YAChBkC,MAAM,eACN3D,MAAOC,KAAKZ,MAAMwD,SAClBe,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,WAAYgE,EAAEC,OAAO9D,QACxDiE,KAAK,WACLhC,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,UAChByC,QAAM,EACNP,MAAM,SACN3D,MAAOC,KAAKZ,MAAMyD,OAClBc,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,SAAUgE,EAAEC,OAAO9D,QACtDiC,WAAS,GAET,kBAACkC,EAAA,EAAD,CAAUpE,IAAK,IAAKC,MAAO,KACxB,UAEH,kBAACmE,EAAA,EAAD,CAAUpE,IAAK,IAAKC,MAAO,KACxB,UAIX,kBAACsD,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,aAChBkC,MAAM,gBACNM,KAAK,OACLjE,MAAOC,KAAKZ,MAAM0D,UAClBa,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,YAAagE,EAAEC,OAAO9D,QACzDoE,gBAAiB,CACfC,QAAQ,GAEVpC,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,WAChBkC,MAAM,eACN3D,MAAOC,KAAKZ,MAAM2D,QAClBY,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,UAAWgE,EAAEC,OAAO9D,QACvDiC,WAAS,MAIrB,kBAACG,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAQD,GAAIA,EAAK,gBAAiBE,QAAS1B,KAAKL,MAAOgC,MAAM,WAA7D,SAGA,kBAACF,EAAA,EAAD,CAAQD,GAAIA,EAAK,uBAAwBE,QAAS1B,KAAKgD,YAAarB,MAAM,WAA1E,e,GAtLES,IAAMC,WAgM1BgC,E,YACF,WAAYlF,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,EACXC,MAAO,GACPE,KAAM,GACNoD,SAAU,GACV0B,eAAgB,GAChBzB,OAAQ,GACRC,eAAW3C,EACXoE,aAAc,IAGlB,EAAK9E,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAK8E,SAAW,EAAKA,SAAS9E,KAAd,gBAjBD,E,4EAoBJI,EAAKC,GAChBC,KAAKC,SAAL,eAAiBH,EAAMC,M,8BAIvBC,KAAKC,SAAS,CAAEZ,WAAW,EAAOa,iBAAaC,M,6BAI/CH,KAAKC,SAAS,CAAEZ,WAAW,M,iCAI3B,IAAMO,EAAiBI,KAAKJ,eACtBD,EAAQK,KAAKL,MAFZ,EAGqBK,KAAKZ,MAE3BiB,EAAO,CACTC,OAAQ,WACRC,UAHS,CAAEjB,MAJR,EAGCA,MACcsD,SAJf,EAGQA,WAMTnC,EAAUC,KAAKC,UAAUN,GAEzBO,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9C,IAAMoC,EAAW1C,KAAKU,MAAMpB,KAAKmB,cAE7BiC,EAAS/B,OACT1B,IAEAC,EAAe,eAAgBwD,EAASqB,WAIpD7D,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHwB,QAAQC,IAAIT,GACZG,EAAQW,KAAKd,K,+BAGP,IAAD,OACCe,EAAKxB,KAAKb,MAAMqC,GAAK,gBAE3B,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,QAAS1B,KAAKP,MAAtB,YAGA,kBAACmC,EAAA,EAAD,CAAQnC,KAAMO,KAAKZ,MAAMC,UACrBwC,QAAS7B,KAAKL,MACdmC,kBAAiBN,EAAK,UACtBO,SAAU,KACVC,WAAS,GAET,kBAACC,EAAA,EAAD,CAAaT,GAAIA,EAAK,iBAAtB,gBACA,kBAACU,EAAA,EAAD,KACI,kBAACmB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,SAChBkC,MAAM,QACN3D,MAAOC,KAAKZ,MAAME,MAClBqE,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,QAASgE,EAAEC,OAAO9D,QACrD+D,WAAS,EACTC,OAAO,QACP/B,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,YAChBkC,MAAM,WACN3D,MAAOC,KAAKZ,MAAMwD,SAClBe,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,WAAYgE,EAAEC,OAAO9D,QACxDiE,KAAK,WACLhC,WAAS,KAGjB,0BAAM0C,MAAO,CAAE/C,MAAO,QAChB3B,KAAKZ,MAAMmF,cAAiB,6BAC5BvE,KAAKZ,MAAMmF,eAGrB,kBAACpC,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAQD,GAAIA,EAAK,gBAAiBE,QAAS1B,KAAKL,MAAOgC,MAAM,WAA7D,SAGA,kBAACF,EAAA,EAAD,CAAQD,GAAIA,EAAK,mBAAoBE,QAAS1B,KAAKwE,SAAU7C,MAAM,WAAnE,mB,GAzGDS,IAAMC,WAmHvBsC,E,YACF,WAAYxF,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,EACXC,MAAO,GACPsD,SAAU,IAGd,EAAKnD,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKkF,MAAQ,EAAKA,MAAMlF,KAAX,gBAZE,E,4EAeJI,EAAKC,GAChBC,KAAKC,SAAL,eAAiBH,EAAMC,M,8BAIvBC,KAAKC,SAAS,CAAEZ,WAAW,EAAOa,iBAAaC,M,6BAI/CH,KAAKC,SAAS,CAAEZ,WAAW,M,8BAI3B,IAAMe,EAAoBJ,KAAKb,MAAMiB,kBADjC,EAEwBJ,KAAKZ,MAAzBE,EAFJ,EAEIA,MAAOsD,EAFX,EAEWA,SAETvC,EAAO,CACTC,OAAQ,QACRC,UAHS,CAAEjB,QAAOsD,aAKhBnC,EAAUC,KAAKC,UAAUN,GAEzBO,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,QACbN,KAAKU,MAAMpB,KAAKmB,cAEpBE,OAAQ,CACjB,IACMhB,EAAO,CACTC,OAAQ,YACRC,UAHS,CAAEjB,UAKTmB,EAAUC,KAAKC,UAAUN,GACzBO,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9CC,QAAQC,IAAIlB,KAAKmB,cACjB,IAAMiC,EAAW1C,KAAKU,MAAMpB,KAAKmB,cAEjCf,EAAkB,aAAcgD,EAAS,IACzCnC,QAAQC,IAAIkC,EAAS,MAG7BxC,EAAQnB,KAAK,OAAQ,kGAAkG,GAEvHmB,EAAQW,KAAKd,KAIzBG,EAAQnB,KAAK,OAAQ,kGAAkG,GAEvHmB,EAAQW,KAAKd,K,+BAGP,IAAD,OACCe,EAAKxB,KAAKb,MAAMqC,GAAK,SAC3B,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,QAAS1B,KAAKP,MAAtB,SAGA,kBAACmC,EAAA,EAAD,CAAQnC,KAAMO,KAAKZ,MAAMC,UACrBwC,QAAS7B,KAAKL,MACdmC,kBAAiBN,EAAK,SACtBO,SAAU,KACVC,WAAS,GAET,kBAACC,EAAA,EAAD,CAAaT,GAAIA,EAAK,gBAAtB,cACA,kBAACU,EAAA,EAAD,KACI,kBAACmB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,SAChBkC,MAAM,QACN3D,MAAOC,KAAKZ,MAAME,MAClBqE,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,QAASgE,EAAEC,OAAO9D,QACrDiC,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,YAChBkC,MAAM,WACN3D,MAAOC,KAAKZ,MAAMwD,SAClBe,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,WAAYgE,EAAEC,OAAO9D,QACxDiE,KAAK,WACLhC,WAAS,MAIrB,kBAACG,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAQD,GAAIA,EAAK,gBAAiBE,QAAS1B,KAAKL,MAAOgC,MAAM,WAA7D,SAGA,kBAACF,EAAA,EAAD,CAAQD,GAAIA,EAAK,gBAAiBE,QAAS1B,KAAK4E,MAAOjD,MAAM,WAA7D,gB,GA5GJS,IAAMC,WA0IXwC,EApBG,SAAC,GAAuC,IAArCzE,EAAoC,EAApCA,kBAAmBqC,EAAiB,EAAjBA,WAC9BjB,EAAK,aAEX,OAAKiB,EASD,kBAACY,EAAA,EAAD,CAAKG,QAAQ,OAAOF,EAAG,EAAGwB,EAAG,EAAGC,QAAQ,mBAAmBC,IAAK,CAAEC,MAAO,UACrE,kBAAC,EAAD,CAAazD,GAAIA,EAAIpB,kBAAmBA,EAAmBqC,WAAYA,IACvE,kBAAC,EAAD,CAAQjB,GAAIA,EAAIpB,kBAAmBA,IACnC,kBAAC,EAAD,CAAQoB,GAAIA,EAAIpB,kBAAmBA,EAAmBb,OAAQkD,KAV9D,kBAACY,EAAA,EAAD,CAAKG,QAAQ,OAAOF,EAAG,EAAGwB,EAAG,EAAGC,QAAQ,mBAAmBC,IAAK,CAAEC,MAAO,UACrE,kBAAC,EAAD,CAAOzD,GAAIA,EAAIpB,kBAAmBA,IAClC,kBAAC,EAAD,CAAUoB,GAAIA,M,kHC3jBxB0D,G,MAAiB,SAAC,GAAmC,IAAjC1D,EAAgC,EAAhCA,GAAIpC,EAA4B,EAA5BA,MAAOQ,EAAqB,EAArBA,eACjC,OAAQ,oCACJ,kBAACyD,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,QAChBkC,MAAM,OACN3D,MAAOX,EAAMsD,KACbiB,SAAU,SAAAC,GAAC,OAAIhE,EAAe,OAAQgE,EAAEC,OAAO9D,QAC/CiC,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,YAChBkC,MAAM,mBACN3D,MAAOX,EAAM+F,SACbxB,SAAU,SAAAC,GAAC,OAAIhE,EAAe,WAAYgE,EAAEC,OAAO9D,QACnDiE,KAAK,SACLhC,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,YAChBkC,MAAM,sBACN3D,MAAOX,EAAMgG,SACbzB,SAAU,SAAAC,GAAC,OAAIhE,EAAe,WAAYgE,EAAEC,OAAO9D,QACnDiE,KAAK,SACLhC,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,UAChBkC,MAAM,SACN3D,MAAOX,EAAMiG,OACb1B,SAAU,SAAAC,GAAC,OAAIhE,EAAe,SAAUgE,EAAEC,OAAO9D,QACjDiC,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,eAChByC,QAAM,EACNP,MAAM,eACN3D,MAAOX,EAAMkG,YACb3B,SAAU,SAAAC,GAAC,OAAIhE,EAAe,cAAegE,EAAEC,OAAO9D,QACtDiC,WAAS,GAET,kBAACkC,EAAA,EAAD,CAAUpE,IAAK,WAAYC,MAAO,YAC/B,YAEH,kBAACmE,EAAA,EAAD,CAAUpE,IAAK,UAAWC,MAAO,WAC9B,WAEH,kBAACmE,EAAA,EAAD,CAAUpE,IAAK,SAAUC,MAAO,UAC7B,UAEH,kBAACmE,EAAA,EAAD,CAAUpE,IAAK,UAAWC,MAAO,WAC9B,aAIX,kBAACsD,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,eAChByC,QAAM,EACNP,MAAM,eACN3D,MAAOX,EAAMmG,YACb5B,SAAU,SAAAC,GAAC,OAAIhE,EAAe,cAAegE,EAAEC,OAAO9D,QACtDiC,WAAS,GAET,kBAACkC,EAAA,EAAD,CAAUpE,IAAK,IAAKC,MAAO,KACxB,OAEH,kBAACmE,EAAA,EAAD,CAAUpE,IAAK,IAAKC,MAAO,KACxB,UAEH,kBAACmE,EAAA,EAAD,CAAUpE,IAAK,IAAKC,MAAO,KACxB,UAIX,kBAACsD,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,mBAChBkC,MAAM,yBACN3D,MAAOX,EAAMoG,gBACb7B,SAAU,SAAAC,GAAC,OAAIhE,EAAe,kBAAmBgE,EAAEC,OAAO9D,QAC1DiC,WAAS,EACTgC,KAAK,eAMfyB,E,YACF,WAAYtG,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,EACXqD,KAAM,GACN0C,SAAU,EACVE,YAAa,WACbC,YAAa,IACbJ,SAAU,EACVE,OAAQ,GACRG,gBAAiB,GAGrB,EAAK/F,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKgG,OAAS,EAAKA,OAAOhG,KAAZ,gBAjBC,E,4EAoBJI,EAAKC,GAChBC,KAAKC,SAAL,eAAiBH,EAAMC,M,8BAIvBC,KAAKC,SAAS,CAAEZ,WAAW,EAAOa,iBAAaC,M,6BAI/CH,KAAKC,SAAS,CAAEZ,WAAW,M,+BAI3B,IAAMM,EAAQK,KAAKL,MACbS,EAAoBJ,KAAKb,MAAMiB,kBAC/BR,EAAiBI,KAAKJ,eAHvB,EAImFI,KAAKZ,MAArFsD,EAJH,EAIGA,KAAM0C,EAJT,EAISA,SAAUE,EAJnB,EAImBA,YAAaC,EAJhC,EAIgCA,YAAaJ,EAJ7C,EAI6CA,SAAUE,EAJvD,EAIuDA,OAAQG,EAJ/D,EAI+DA,gBAE9DnF,EAAO,CACTC,OAAQ,mBACRC,UAHS,CAAEjB,MAAOU,KAAKb,MAAMsD,WAAWnD,MAAOoD,OAAM0C,WAAUE,cAAaC,cAAaJ,WAAUE,SAAQG,oBAKzG/E,EAAUC,KAAKC,UAAUN,GAEzBO,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9CC,QAAQC,IAAIlB,KAAKmB,cACjB,IAAMiC,EAAW1C,KAAKU,MAAMpB,KAAKmB,cAEjC,GAAIiC,EAAS/B,OAAQ,CACjB,IAAMT,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9C,IAAM2E,EAAcjF,KAAKU,MAAMpB,KAAKmB,cACpCf,EAAkB,cAAeuF,KAGzC/E,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHmB,EAAQW,KAAK,uDACb5B,SAEAC,EAAe,eAAgBwD,EAASqB,WAIpD7D,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHmB,EAAQW,KAAKd,K,+BAIb,IAAMe,EAAK,SACX,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,QAAS1B,KAAKP,KAAMmG,QAAQ,YAAYjE,MAAM,WAAtD,qBACA,kBAACC,EAAA,EAAD,CAAQnC,KAAMO,KAAKZ,MAAMC,UACrBwC,QAAS7B,KAAKL,MACdmC,kBAAiBN,EAAK,SACtBO,SAAU,KACVC,WAAS,GAET,kBAACC,EAAA,EAAD,CAAaT,GAAIA,EAAK,gBAAtB,qBACA,kBAACU,EAAA,EAAD,KACI,kBAAC,EAAD,CAAgBV,GAAIA,EAChBpC,MAAOY,KAAKZ,MACZQ,eAAgBI,KAAKJ,iBACzB,0BAAM8E,MAAO,CAAE/C,MAAO,QAChB3B,KAAKZ,MAAMmF,cAAiB,6BAC5BvE,KAAKZ,MAAMmF,eAGrB,kBAACpC,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAQD,GAAIA,EAAK,gBAAiBE,QAAS1B,KAAKL,MAAOgC,MAAM,WAA7D,SAGA,kBAACF,EAAA,EAAD,CAAQD,GAAIA,EAAK,iBAAkBE,QAAS1B,KAAK0F,OAAQ/D,MAAM,WAA/D,iB,GAhGOS,IAAMC,WA0G/BwD,E,YACF,WAAY1G,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,EACXqD,KAAMvD,EAAM2G,WAAWpD,KACvB0C,SAAUjG,EAAM2G,WAAWV,SAC3BE,YAAanG,EAAM2G,WAAWR,YAC9BC,YAAapG,EAAM2G,WAAWP,YAC9BJ,SAAUhG,EAAM2G,WAAWX,SAC3BE,OAAQlG,EAAM2G,WAAWT,OACzBG,gBAAiBrG,EAAM2G,WAAWN,iBAGtC,EAAK/F,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKqG,KAAO,EAAKA,KAAKrG,KAAV,gBAjBG,E,4EAoBJI,EAAKC,GAChBC,KAAKC,SAAL,eAAiBH,EAAMC,M,8BAIvBC,KAAKC,SAAS,CAAEZ,WAAW,EAAOa,iBAAaC,M,6BAI/CH,KAAKC,SAAS,CAAEZ,WAAW,M,6BAI3B,IAAMM,EAAQK,KAAKL,MACbS,EAAoBJ,KAAKb,MAAMiB,kBAC/BR,EAAiBI,KAAKJ,eAHzB,EAIqFI,KAAKZ,MAArFsD,EAJL,EAIKA,KAAM0C,EAJX,EAIWA,SAAUE,EAJrB,EAIqBA,YAAaC,EAJlC,EAIkCA,YAAaJ,EAJ/C,EAI+CA,SAAUE,EAJzD,EAIyDA,OAAQG,EAJjE,EAIiEA,gBAC9DrC,EAAO,CAAET,KAAM1C,KAAKb,MAAM2G,WAAWpD,KAAM0C,WAAUE,cAAaC,cAAaJ,WAAUE,SAAQG,mBACnGxF,KAAKb,MAAM2G,WAAWpD,OAASA,IAC/BS,EAAK6C,QAAUtD,GACnB,IAAMrC,EAAO,CACTC,OAAQ,iBACRC,UAAW4C,GAET1C,EAAUC,KAAKC,UAAUN,GAEzBO,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9CC,QAAQC,IAAIlB,KAAKmB,cACjB,IAAMiC,EAAW1C,KAAKU,MAAMpB,KAAKmB,cAEjC,GAAIiC,EAAS/B,OAAQ,CACjB,IAAMT,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9C,IAAM2E,EAAcjF,KAAKU,MAAMpB,KAAKmB,cACpCf,EAAkB,cAAeuF,KAGzC/E,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHmB,EAAQW,KAAK,uDACb5B,SAEAC,EAAe,eAAgBwD,EAASqB,WAIpD7D,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHwB,QAAQC,IAAIT,GACZG,EAAQW,KAAKd,K,+BAIb,IAAMe,EAAKxB,KAAKb,MAAM2G,WAAWtE,GAAK,QACtC,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,QAAS1B,KAAKP,KAAMmG,QAAQ,aAApC,QACA,kBAAChE,EAAA,EAAD,CAAQnC,KAAMO,KAAKZ,MAAMC,UACrBwC,QAAS7B,KAAKL,MACdmC,kBAAiBN,EAAK,SACtBO,SAAU,KACVC,WAAS,GAET,kBAACC,EAAA,EAAD,CAAaT,GAAIA,EAAK,gBAAtB,2BACA,kBAACU,EAAA,EAAD,KACI,kBAAC,EAAD,CAAgBV,GAAIA,EAChBpC,MAAOY,KAAKZ,MACZQ,eAAgBI,KAAKJ,iBACzB,0BAAM8E,MAAO,CAAE/C,MAAO,QAChB3B,KAAKZ,MAAMmF,cAAiB,6BAC5BvE,KAAKZ,MAAMmF,eAGrB,kBAACpC,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAQD,GAAIA,EAAK,gBAAiBE,QAAS1B,KAAKL,MAAOgC,MAAM,WAA7D,SAGA,kBAACF,EAAA,EAAD,CAAQD,GAAIA,EAAK,eAAgBE,QAAS1B,KAAK+F,KAAMpE,MAAM,WAA3D,e,GAnGKS,IAAMC,WA6G7B4D,E,YACF,WAAY9G,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,GAGf,EAAKI,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKwG,KAAO,EAAKA,KAAKxG,KAAV,gBAVG,E,4EAaJI,EAAKC,GAChBC,KAAKC,SAAL,eAAiBH,EAAMC,M,8BAIvBC,KAAKC,SAAS,CAAEZ,WAAW,EAAOa,iBAAaC,M,6BAI/CH,KAAKC,SAAS,CAAEZ,WAAW,M,6BAI3B,IAAMM,EAAQK,KAAKL,MACbS,EAAoBJ,KAAKb,MAAMiB,kBAC/BR,EAAiBI,KAAKJ,eAEtBS,EAAO,CACTC,OAAQ,aACRC,UAHS,CAAEuF,WAAY9F,KAAKb,MAAM2G,WAAWpD,KAAMpD,MAAOU,KAAKb,MAAMsD,WAAWnD,QAK9EmB,EAAUC,KAAKC,UAAUN,GAEzBO,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9CC,QAAQC,IAAIlB,KAAKmB,cACjB,IAAMiC,EAAW1C,KAAKU,MAAMpB,KAAKmB,cAEjC,GAAIiC,EAAS/B,QAA8B,UAApB+B,EAAS/B,OAAoB,CAChD,IAAMT,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9C,IAAM2E,EAAcjF,KAAKU,MAAMpB,KAAKmB,cACpCf,EAAkB,cAAeuF,KAGzC/E,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHmB,EAAQW,KAAK,uDACb5B,SAEAC,EAAe,eAAgBwD,EAASqB,WAIpD7D,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHwB,QAAQC,IAAIT,GACZG,EAAQW,KAAKd,K,+BAIb,IAAMe,EAAKxB,KAAKb,MAAM2G,WAAWtE,GAAK,QACtC,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,QAAS1B,KAAKP,KAAMmG,QAAQ,aAApC,sBACA,kBAAChE,EAAA,EAAD,CAAQnC,KAAMO,KAAKZ,MAAMC,UACrBwC,QAAS7B,KAAKL,MACdmC,kBAAiBN,EAAK,SACtBO,SAAU,KACVC,WAAS,GAET,kBAACC,EAAA,EAAD,CAAaT,GAAIA,EAAK,gBAAtB,wBACA,kBAACU,EAAA,EAAD,0BAEI,0BAAMwC,MAAO,CAAE/C,MAAO,QAChB3B,KAAKZ,MAAMmF,cAAiB,6BAC5BvE,KAAKZ,MAAMmF,eAGrB,kBAACpC,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAQD,GAAIA,EAAK,gBAAiBE,QAAS1B,KAAKL,MAAOgC,MAAM,WAA7D,SAGA,kBAACF,EAAA,EAAD,CAAQD,GAAIA,EAAK,eAAgBE,QAAS1B,KAAKkG,KAAMvE,MAAM,WAA3D,e,GAvFMS,IAAMC,WAiG9B8D,E,YACF,WAAYhH,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,EACX+G,MAAOjH,EAAMkH,iBACbC,SAAU,IAGd,EAAK7G,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAK6G,OAAS,EAAKA,OAAO7G,KAAZ,gBACd,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBAZP,E,4EAeJI,EAAKC,GAChBC,KAAKC,SAAL,eAAiBH,EAAMC,M,8BAIvBC,KAAKC,SAAS,CAAEZ,WAAW,EAAOa,iBAAaC,M,6BAI/CH,KAAKC,SAAS,CAAEZ,WAAW,M,+BAI3B,IAAMM,EAAQK,KAAKL,MACbS,EAAoBJ,KAAKb,MAAMiB,kBAC/BR,EAAiBI,KAAKJ,eAEtBS,EAAO,CACTC,OAAQ,iBACRC,UAHS,CAAEuF,WAAY9F,KAAKb,MAAM2G,WAAWpD,KAAM8D,KAAMxG,KAAKZ,MAAMkH,SAAS,KAK3E7F,EAAUC,KAAKC,UAAUN,GAEzBO,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9CC,QAAQC,IAAIlB,KAAKmB,cACjB,IAAMiC,EAAW1C,KAAKU,MAAMpB,KAAKmB,cAEjC,GAAIiC,EAAS/B,QAA8B,UAApB+B,EAAS/B,OAAoB,CAChD,IAAMT,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9C,IAAM2E,EAAcjF,KAAKU,MAAMpB,KAAKmB,cACpCf,EAAkB,cAAeuF,KAGzC/E,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHmB,EAAQW,KAAK,uDACb5B,SAEAC,EAAe,eAAgBwD,EAASqB,WAIpD7D,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHwB,QAAQC,IAAIT,GACZG,EAAQW,KAAKd,K,+BAGP,IAAD,OAECe,EADaxB,KAAKb,MAAM2G,WACRtE,GAAK,QAErBiF,EAAe,SAAA1G,GAAK,OAAI,WAC5B,IAAM2G,EAAe,EAAKtH,MAAMkH,SAASK,QAAQ5G,GAC7C6G,EAAU,YAAO,EAAKxH,MAAMkH,WAEV,IAAlBI,EACFE,EAAa,CAAC7G,GAEd6G,EAAWC,OAAOH,EAAc,GAElC,EAAKzG,SAAS,CAAEqG,SAAUM,MAG5B,OACI,oCACI,kBAACnF,EAAA,EAAD,CAAQC,QAAS1B,KAAKP,KAAMmG,QAAQ,YAAYkB,SAAsC,IAA5B9G,KAAKZ,MAAMgH,MAAMnD,QAA3E,iBACA,kBAACrB,EAAA,EAAD,CAAQnC,KAAMO,KAAKZ,MAAMC,UACrBwC,QAAS7B,KAAKL,MACdmC,kBAAiBN,EAAK,SACtBO,SAAU,KACVC,WAAS,GAET,kBAACC,EAAA,EAAD,CAAaT,GAAIA,EAAK,gBAAtB,gDACA,kBAACU,EAAA,EAAD,kDAEI,kBAAC6E,EAAA,EAAD,KACG/G,KAAKZ,MAAMgH,MAAMY,KAAI,SAAAR,GACpB,IAAMS,EAAO,8BAA0BT,EAAK9D,MAE5C,OACE,kBAACwE,EAAA,EAAD,CAAUpH,IAAK0G,EAAK9D,KAAMyE,UAAMhH,EAAWiH,OAAK,EAACC,QAAM,EAAC3F,QAAS+E,EAAaD,EAAK9D,OACjF,kBAAC4E,EAAA,EAAD,CAAc9F,GAAIyF,EAASM,QAAO,UAAKf,EAAK9D,QAC5C,kBAAC8E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLC,SAAqD,IAA5C,EAAKvI,MAAMkH,SAASK,QAAQH,EAAK9D,MAC1CiB,SAAU8C,EAAaD,EAAK9D,MAC5BkF,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,WAO7C,0BAAMvC,MAAO,CAAE/C,MAAO,QAChB3B,KAAKZ,MAAMmF,cAAiB,6BAC5BvE,KAAKZ,MAAMmF,eAGrB,kBAACpC,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAQD,GAAIA,EAAK,gBAAiBE,QAAS1B,KAAKL,MAAOgC,MAAM,WAA7D,SAGA,kBAACF,EAAA,EAAD,CAAQD,GAAIA,EAAK,iBAAkBE,QAAS1B,KAAKuG,OAAQ5E,MAAM,WAA/D,wB,GA5HKS,IAAMC,WAsId0F,E,YACjB,WAAY5I,GAAQ,IAAD,8BACf,4CAAMA,KAEDS,eAAiB,EAAKA,eAAeF,KAApB,gBAHP,E,4EAMJI,EAAKC,GAChBC,KAAKC,SAAL,eAAiBH,EAAMC,M,+BAGjB,IAAD,OA0DLkB,QAAQC,IAAIlB,KAAKb,MAAMwG,aACvB,IAAMqC,EAAOhI,KAAKb,MAAMwG,YAAYqB,KAAI,SAAAlB,GAAU,OA1D1B,SAACA,GACrB,IAAIO,EAAmB,GACnB,EAAKlH,MAAMsD,aACX4D,EAAmB,EAAKlH,MAAMiH,MAAM6B,QAAO,SAAAC,GAAC,OAAIA,EAAEC,UAAY,EAAKhJ,MAAMsD,WAAWnD,UAExF,IACM8I,EADQtC,EAAWM,MAAMY,KAAI,SAAAkB,GAAC,OAAIA,EAAExF,QACnBwD,KAAK,MAGtBmC,EADWvC,EAAWwC,SAAStB,KAAI,SAAAkB,GAAC,OAAIA,EAAE5I,SACnB4G,KAAK,MAElC,OACI,kBAACqC,EAAA,EAAD,CAAgBzI,IAAKgG,EAAWpD,MAC9B,kBAAC8F,EAAA,EAAD,CACEC,WAAY,kBAAC,IAAD,MACZC,gBAAc,kBACdlH,GAAG,kBAECsE,EAAWpD,MAEjB,kBAACiG,EAAA,EAAD,KACI,2BAAOnH,GAAG,YACR,+BACI,4BACE,6BACA,6BACA,8BAEF,4BACE,4BAAI,mDAAJ,IAAkCsE,EAAWV,UAC7C,4BAAI,4CAAJ,IAA2BU,EAAWR,aACtC,4BAAI,4CAAJ,IAAsD,MAA3BQ,EAAWP,YACT,OAAS,WAExC,4BACE,4BAAI,yCAAJ,IAAwBO,EAAWX,SAAnC,YACA,4BAAI,qCAAJ,IAAoBW,EAAWT,QAC/B,4BAAI,gDAAJ,IAA+BS,EAAWN,gBAA1C,SAEF,4BACE,4BAAI,0CAAJ,IAAyB6C,GACzB,4BAAI,qCAAJ,IAAoBD,OAK/B,EAAKjJ,MAAMsD,YACZ,kBAACmG,EAAA,EAAD,KACI,kBAAC,EAAD,CAAgB9C,WAAYA,EAAYrD,WAAY,EAAKtD,MAAMsD,WAAYrC,kBAAmB,EAAKjB,MAAMiB,kBAAmBiG,iBAAkBA,IAC9I,kBAAC,EAAD,CAAiBP,WAAYA,EAAYrD,WAAY,EAAKtD,MAAMsD,WAAYrC,kBAAmB,EAAKjB,MAAMiB,qBACvG,EAAKjB,MAAMsD,WAAWnD,QAAUwG,EAAWqC,SAA4C,UAA/B,EAAKhJ,MAAMsD,WAAWjD,OACjF,kBAAC,EAAD,CAAgBsG,WAAYA,EAAY1F,kBAAmB,EAAKjB,MAAMiB,sBAO9ByI,CAAgB/C,MAEtE,OACI,kBAACgD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACpBhJ,KAAKb,MAAMsD,YACZ,kBAACqG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAAC7F,EAAA,EAAD,CAAKG,QAAQ,OAAOwB,IAAK,CAAEC,MAAO,UAC9B,kBAAC,EAAD,CAAmBxC,WAAYzC,KAAKb,MAAMsD,WAAYrC,kBAAmBJ,KAAKb,MAAMiB,sBAG5F,kBAAC0I,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACTlB,Q,GAjFmB5F,IAAMC,WC/hBzC8G,EAAW,SAAC,GAAmC,IAAjC3H,EAAgC,EAAhCA,GAAIpC,EAA4B,EAA5BA,MAAOQ,EAAqB,EAArBA,eAC3B,OAAQ,oCACJ,kBAACyD,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,QAChBkC,MAAM,OACN3D,MAAOX,EAAMsD,KACbiB,SAAU,SAAAC,GAAC,OAAIhE,EAAe,OAAQgE,EAAEC,OAAO9D,QAC/CiC,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,YAKtC4F,E,YACF,WAAYjK,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,EACXqD,KAAM,GACN2G,QAAS,CAAC,gBAGd,EAAK5J,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKgG,OAAS,EAAKA,OAAOhG,KAAZ,gBAZC,E,4EAeJI,EAAKC,GAChBC,KAAKC,SAAL,eAAiBH,EAAMC,M,8BAIvBC,KAAKC,SAAS,CAAEZ,WAAW,EAAOa,iBAAaC,M,6BAI/CH,KAAKC,SAAS,CAAEZ,WAAW,M,+BAI3B,IAAMe,EAAoBJ,KAAKb,MAAMiB,kBAC/BR,EAAiBI,KAAKJ,eACpB8C,EAAQ1C,KAAKZ,MAAbsD,KAEFrC,EAAO,CACTC,OAAQ,aACRC,UAHS,CAAEjB,MAAOU,KAAKb,MAAMsD,WAAWnD,MAAOoD,SAK7CjC,EAAUC,KAAKC,UAAUN,GAEzBO,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9CC,QAAQC,IAAIlB,KAAKmB,cACjB,IAAMiC,EAAW1C,KAAKU,MAAMpB,KAAKmB,cAEjC,GAAIiC,EAAS/B,OAAQ,CACjB,IAAMT,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9C,IAAMoF,EAAQ1F,KAAKU,MAAMpB,KAAKmB,cAC9Bf,EAAkB,QAASgG,KAGnCxF,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHmB,EAAQW,KAAK,sDAEb3B,EAAe,eAAgBwD,EAASqB,WAIpD7D,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHmB,EAAQW,KAAKd,K,+BAIb,IAAMe,EAAK,SACX,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,QAAS1B,KAAKP,KAAMmG,QAAQ,YAAYjE,MAAM,WAAtD,eACA,kBAACC,EAAA,EAAD,CAAQnC,KAAMO,KAAKZ,MAAMC,UACrBwC,QAAS7B,KAAKL,MACdmC,kBAAiBN,EAAK,SACtBO,SAAU,KACVC,WAAS,GAET,kBAACC,EAAA,EAAD,CAAaT,GAAIA,EAAK,gBAAtB,eACA,kBAACU,EAAA,EAAD,KACI,kBAAC,EAAD,CAAUV,GAAIA,EACVpC,MAAOY,KAAKZ,MACZQ,eAAgBI,KAAKJ,iBACzB,0BAAM8E,MAAO,CAAE/C,MAAO,QAChB3B,KAAKZ,MAAMmF,cAAiB,6BAC5BvE,KAAKZ,MAAMmF,eAGrB,kBAACpC,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAQD,GAAIA,EAAK,gBAAiBE,QAAS1B,KAAKL,MAAOgC,MAAM,WAA7D,SAGA,kBAACF,EAAA,EAAD,CAAQD,GAAIA,EAAK,iBAAkBE,QAAS1B,KAAK0F,OAAQ/D,MAAM,WAA/D,iB,GAzFCS,IAAMC,WAmGzBiH,E,YACF,WAAYnK,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,EACXqD,KAAMvD,EAAMqH,KAAK9D,KACjB2G,QAASlK,EAAMqH,KAAK6C,SAGxB,EAAK5J,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKqG,KAAO,EAAKA,KAAKrG,KAAV,gBAZG,E,4EAeJI,EAAKC,GAChBC,KAAKC,SAAL,eAAiBH,EAAMC,M,8BAIvBC,KAAKC,SAAS,CAAEZ,WAAW,EAAOa,iBAAaC,M,6BAI/CH,KAAKC,SAAS,CAAEZ,WAAW,M,6BAI3B,IAAMe,EAAoBJ,KAAKb,MAAMiB,kBAC/BR,EAAiBI,KAAKJ,eACpB8C,EAAQ1C,KAAKZ,MAAbsD,KACR,GAAIA,IAAS1C,KAAKb,MAAMqH,KAAK9D,KAAM,CAC/B,IACMrC,EAAO,CACTC,OAAQ,WACRC,UAHS,CAAEmC,KAAM1C,KAAKb,MAAMqH,KAAK9D,KAAMsD,QAAStD,IAK9CjC,EAAUC,KAAKC,UAAUN,GAEzBO,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9CC,QAAQC,IAAIlB,KAAKmB,cACjB,IAAMiC,EAAW1C,KAAKU,MAAMpB,KAAKmB,cAEjC,GAAIiC,EAAS/B,OAAQ,CACjB,IAAMT,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9C,IAAMoF,EAAQ1F,KAAKU,MAAMpB,KAAKmB,cAC9Bf,EAAkB,QAASgG,KAGnCxF,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHmB,EAAQW,KAAK,sDAEb3B,EAAe,eAAgBwD,EAASqB,WAIpD7D,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHwB,QAAQC,IAAIT,GACZG,EAAQW,KAAKd,GAEjBT,KAAKL,U,+BAIL,IAAM6B,EAAKxB,KAAKb,MAAMqH,KAAKhF,GAAK,QAChC,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,QAAS1B,KAAKP,KAAMmG,QAAQ,aAApC,QACA,kBAAChE,EAAA,EAAD,CAAQnC,KAAMO,KAAKZ,MAAMC,UACrBwC,QAAS7B,KAAKL,MACdmC,kBAAiBN,EAAK,SACtBO,SAAU,KACVC,WAAS,GAET,kBAACC,EAAA,EAAD,CAAaT,GAAIA,EAAK,gBAAtB,qBACA,kBAACU,EAAA,EAAD,KACI,kBAAC,EAAD,CAAUV,GAAIA,EACVpC,MAAOY,KAAKZ,MACZQ,eAAgBI,KAAKJ,iBACzB,0BAAM8E,MAAO,CAAE/C,MAAO,QAChB3B,KAAKZ,MAAMmF,cAAiB,6BAC5BvE,KAAKZ,MAAMmF,eAGrB,kBAACpC,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAQD,GAAIA,EAAK,gBAAiBE,QAAS1B,KAAKL,MAAOgC,MAAM,WAA7D,SAGA,kBAACF,EAAA,EAAD,CAAQD,GAAIA,EAAK,eAAgBE,QAAS1B,KAAK+F,KAAMpE,MAAM,WAA3D,e,GA7FDS,IAAMC,WAuGvBkH,E,YACF,WAAYpK,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,GAGf,EAAKI,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKwG,KAAO,EAAKA,KAAKxG,KAAV,gBAVG,E,4EAaJI,EAAKC,GAChBC,KAAKC,SAAL,eAAiBH,EAAMC,M,8BAIvBC,KAAKC,SAAS,CAAEZ,WAAW,EAAOa,iBAAaC,M,6BAI/CH,KAAKC,SAAS,CAAEZ,WAAW,M,6BAI3B,IAAMe,EAAoBJ,KAAKb,MAAMiB,kBAC/BR,EAAiBI,KAAKJ,eAEtBS,EAAO,CACTC,OAAQ,YACRC,UAHS,CAAEjB,MAAOU,KAAKb,MAAMsD,WAAWnD,MAAOkH,KAAMxG,KAAKb,MAAMqH,KAAK9D,OAKnEjC,EAAUC,KAAKC,UAAUN,GAEzBO,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9CC,QAAQC,IAAIlB,KAAKmB,cACjB,IAAMiC,EAAW1C,KAAKU,MAAMpB,KAAKmB,cAEjC,GAAIiC,EAAS/B,OAAQ,CACjB,IAAMT,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9C,IAAMoF,EAAQ1F,KAAKU,MAAMpB,KAAKmB,cAC9Bf,EAAkB,QAASgG,KAGnCxF,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHmB,EAAQW,KAAK,sDAEb3B,EAAe,eAAgBwD,EAASqB,WAIpD7D,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHmB,EAAQW,KAAKd,K,+BAIb,IAAMe,EAAKxB,KAAKb,MAAMqH,KAAKhF,GAAK,QAChC,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,QAAS1B,KAAKP,KAAMmG,QAAQ,YAAYjE,MAAM,aAAtD,SACA,kBAACC,EAAA,EAAD,CAAQnC,KAAMO,KAAKZ,MAAMC,UACrBwC,QAAS7B,KAAKL,MACdmC,kBAAiBN,EAAK,SACtBO,SAAU,KACVC,WAAS,GAET,kBAACC,EAAA,EAAD,CAAaT,GAAIA,EAAK,gBAAtB,cACA,kBAACU,EAAA,EAAD,wBAEI,0BAAMwC,MAAO,CAAE/C,MAAO,QAChB3B,KAAKZ,MAAMmF,cAAiB,6BAC5BvE,KAAKZ,MAAMmF,eAGrB,kBAACpC,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAQD,GAAIA,EAAK,gBAAiBE,QAAS1B,KAAKL,MAAOgC,MAAM,WAA7D,SAGA,kBAACF,EAAA,EAAD,CAAQD,GAAIA,EAAK,eAAgBE,QAAS1B,KAAKkG,KAAMvE,MAAM,aAA3D,gB,GApFAS,IAAMC,WA8FxBmH,G,YACF,WAAYrK,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,GAGf,EAAKI,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKwG,KAAO,EAAKA,KAAKxG,KAAV,gBAVG,E,4EAaJI,EAAKC,GAChBC,KAAKC,SAAL,eAAiBH,EAAMC,M,8BAIvBC,KAAKC,SAAS,CAAEZ,WAAW,EAAOa,iBAAaC,M,6BAI/CH,KAAKC,SAAS,CAAEZ,WAAW,M,6BAI3B,IAAMe,EAAoBJ,KAAKb,MAAMiB,kBAC/BR,EAAiBI,KAAKJ,eAEtBS,EAAO,CACTC,OAAQ,WACRC,UAHS,CAAEjB,MAAOU,KAAKb,MAAMsD,WAAWnD,MAAOkH,KAAMxG,KAAKb,MAAMqH,KAAK9D,OAKnEjC,EAAUC,KAAKC,UAAUN,GAEzBO,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9CC,QAAQC,IAAIlB,KAAKmB,cACjB,IAAMiC,EAAW1C,KAAKU,MAAMpB,KAAKmB,cAEjC,GAAIiC,EAAS/B,OAAQ,CACjB,IAAMT,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9C,IAAMoF,EAAQ1F,KAAKU,MAAMpB,KAAKmB,cAC9Bf,EAAkB,QAASgG,KAGnCxF,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHmB,EAAQW,KAAK,sDAEb3B,EAAe,eAAgBwD,EAASqB,WAIpD7D,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHmB,EAAQW,KAAKd,K,+BAIb,IAAMe,EAAKxB,KAAKb,MAAMqH,KAAKhF,GAAK,QAChC,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,QAAS1B,KAAKP,KAAMmG,QAAQ,aAApC,QACA,kBAAChE,EAAA,EAAD,CAAQnC,KAAMO,KAAKZ,MAAMC,UACrBwC,QAAS7B,KAAKL,MACdmC,kBAAiBN,EAAK,SACtBO,SAAU,KACVC,WAAS,GAET,kBAACC,EAAA,EAAD,CAAaT,GAAIA,EAAK,gBAAtB,2BACA,kBAACU,EAAA,EAAD,uBAEI,0BAAMwC,MAAO,CAAE/C,MAAO,QAChB3B,KAAKZ,MAAMmF,cAAiB,6BAC5BvE,KAAKZ,MAAMmF,eAGrB,kBAACpC,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAQD,GAAIA,EAAK,gBAAiBE,QAAS1B,KAAKL,MAAOgC,MAAM,WAA7D,SAGA,kBAACF,EAAA,EAAD,CAAQD,GAAIA,EAAK,eAAgBE,QAAS1B,KAAKkG,KAAMvE,MAAM,aAA3D,e,GApFDS,IAAMC,WA8FRoH,G,YACjB,WAAYtK,GAAQ,IAAD,8BACf,4CAAMA,KAEDS,eAAiB,EAAKA,eAAeF,KAApB,gBAHP,E,4EAMJI,EAAKC,GAChBC,KAAKC,SAAL,eAAiBH,EAAMC,M,+BAGjB,IAAD,OAyCCiI,EAAOhI,KAAKb,MAAMiH,MAAMY,KAAI,SAAAR,GAAI,OAxCpB,SAACA,GACf,IAAM6C,EAAU7C,EAAK6C,QAAQrC,KAAI,SAAAlC,GAAC,OAAIA,EAAEtF,QAClCkK,EAAaL,EAAQnD,KAAK,MAEhC,OACI,kBAACqC,EAAA,EAAD,CAAgBzI,IAAM0G,EAAK9D,MACzB,kBAAC8F,EAAA,EAAD,CACEC,WAAY,kBAAC,IAAD,MACZC,gBAAc,kBACdlH,GAAG,kBAECgF,EAAK9D,MAEX,kBAACiG,EAAA,EAAD,KACI,2BAAOnH,GAAG,YACR,+BACI,4BACE,8BAEF,4BACE,4BAAI,uCAAJ,IAAsBkI,GACtB,4BAAI,uCAAJ,IAAsBlD,EAAKmD,aAKtC,EAAKxK,MAAMsD,YACZ,kBAACmG,EAAA,EAAD,MACMS,EAAQO,SAAS,EAAKzK,MAAMsD,WAAWjD,OACzC,kBAAC,GAAD,CAAUgH,KAAMA,EAAM/D,WAAY,EAAKtD,MAAMsD,WAAYrC,kBAAmB,EAAKjB,MAAMiB,oBACtFiJ,EAAQO,SAAS,EAAKzK,MAAMsD,WAAWjD,OACxC,kBAAC,EAAD,CAAWgH,KAAMA,EAAM/D,WAAY,EAAKtD,MAAMsD,WAAYrC,kBAAmB,EAAKjB,MAAMiB,qBACrF,EAAKjB,MAAMsD,WAAWnD,QAAUkH,EAAK2B,SAA4C,UAA/B,EAAKhJ,MAAMsD,WAAWjD,OAAsB,oCAC7F,kBAAC,EAAD,CAAUgH,KAAMA,EAAMpG,kBAAmB,EAAKjB,MAAMiB,uBAO5ByJ,CAAUrD,MAEpD,OACI,kBAACsC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACpBhJ,KAAKb,MAAMsD,YACZ,kBAACqG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAAC7F,EAAA,EAAD,CAAKG,QAAQ,OAAOwB,IAAK,CAAEC,MAAO,UAC9B,kBAAC,EAAD,CAAYxC,WAAYzC,KAAKb,MAAMsD,WAAYrC,kBAAmBJ,KAAKb,MAAMiB,sBAGrF,kBAAC0I,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACTlB,Q,GA/Da5F,IAAMC,WCrZnCyH,G,YACF,WAAY3K,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,EACXC,MAAOH,EAAMI,OAAOD,MACpBE,KAAML,EAAMI,OAAOC,KACnBkD,KAAMvD,EAAMI,OAAOmD,KACnBC,QAASxD,EAAMI,OAAOoD,QACtBC,SAAU,GACVC,OAAQ1D,EAAMI,OAAOsD,OACrBC,UAAW3D,EAAMI,OAAOuD,UACxBC,QAAS5D,EAAMI,OAAOwD,SAG1B,EAAKtD,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKqK,KAAO,EAAKA,KAAKrK,KAAV,gBAlBG,E,4EAqBJI,EAAKC,GACJ,YAARD,GAAqBC,EAAMkD,OAAS,IACpClD,EAAQA,EAAMmD,UAAU,EAAG,IAE/BlD,KAAKC,SAAL,eAAiBH,EAAMC,M,8BAIvBC,KAAKC,SAAS,CAAEZ,WAAW,EAAOa,iBAAaC,M,6BAI/CH,KAAKC,SAAS,CAAEZ,WAAW,M,6BAI3B,IAAMe,EAAoBJ,KAAKb,MAAMiB,kBAC/BR,EAAiBI,KAAKJ,eAFzB,EAG0EI,KAAKZ,MAA1EE,EAHL,EAGKA,MAAOE,EAHZ,EAGYA,KAAMkD,EAHlB,EAGkBA,KAAMC,EAHxB,EAGwBA,QAASC,EAHjC,EAGiCA,SAC9BO,EAAO,CAAE7D,QAAOE,OAAMkD,OAAMC,UAASE,OAJxC,EAG2CA,OACKC,UAJhD,EAGmDA,UACQC,QAJ3D,EAG8DA,SAE7DH,EAASK,OAAS,IAClBE,EAAKP,SAAWA,GACpB,IAAMvC,EAAO,CACTC,OAAQ,aACRC,UAAW4C,GAET1C,EAAUC,KAAKC,UAAUN,GAEzBO,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9CC,QAAQC,IAAIlB,KAAKmB,cACjB,IAAMiC,EAAW1C,KAAKU,MAAMpB,KAAKmB,cAEjC,GAAIiC,EAAS/B,OAAQ,CACjB,IAAMT,EAAS,IAAIC,eACnBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9C,IAAMM,EAAQZ,KAAKU,MAAMpB,KAAKmB,cAC9Bf,EAAkB,QAASkB,KAGnCV,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHmB,EAAQW,KAAK,wDAEb3B,EAAe,eAAgBwD,EAASqB,WAIpD7D,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHwB,QAAQC,IAAIT,GACZG,EAAQW,KAAKd,K,+BAGP,IAAD,OACCe,EAAKxB,KAAKb,MAAMqC,GAAK,gBAE3B,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,QAAS1B,KAAKP,KAAMmG,QAAQ,aAApC,QACA,kBAAChE,EAAA,EAAD,CAAQnC,KAAMO,KAAKZ,MAAMC,UACrBwC,QAAS7B,KAAKL,MACdmC,kBAAiBN,EAAK,UACtBO,SAAU,KACVC,WAAS,GAET,kBAACC,EAAA,EAAD,CAAaT,GAAIA,EAAK,iBAAtB,aACA,kBAACU,EAAA,EAAD,KACI,kBAACmB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,SAChBkC,MAAM,QACN3D,MAAOC,KAAKZ,MAAME,MAClBqE,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,QAASgE,EAAEC,OAAO9D,QACrD+D,WAAS,EACTC,OAAO,QACP/B,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,QAChBkC,MAAM,OACN3D,MAAOC,KAAKZ,MAAMI,KAClBmE,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,OAAQgE,EAAEC,OAAO9D,QACpDiC,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,QAChBkC,MAAM,OACN3D,MAAOC,KAAKZ,MAAMsD,KAClBiB,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,OAAQgE,EAAEC,OAAO9D,QACpDiC,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,WAChBkC,MAAM,UACN3D,MAAOC,KAAKZ,MAAMuD,QAClBgB,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,UAAWgE,EAAEC,OAAO9D,QACvDiC,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,YAChBkC,MAAM,eACN3D,MAAOC,KAAKZ,MAAMwD,SAClBe,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,WAAYgE,EAAEC,OAAO9D,QACxDiE,KAAK,WACLhC,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,UAChByC,QAAM,EACNP,MAAM,SACN3D,MAAOC,KAAKZ,MAAMyD,OAClBc,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,SAAUgE,EAAEC,OAAO9D,QACtDiC,WAAS,GAET,kBAACkC,EAAA,EAAD,CAAUpE,IAAK,IAAKC,MAAO,KACxB,UAEH,kBAACmE,EAAA,EAAD,CAAUpE,IAAK,IAAKC,MAAO,KACxB,UAIX,kBAACsD,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,aAChBkC,MAAM,gBACNM,KAAK,OACLjE,MAAOC,KAAKZ,MAAM0D,UAClBa,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,YAAagE,EAAEC,OAAO9D,QACzDoE,gBAAiB,CACfC,QAAQ,GAEVpC,WAAS,KAGjB,kBAACqB,EAAA,EAAD,CAAKC,EAAG,EAAGC,UAAU,OAAOC,QAAQ,SAChC,kBAACC,EAAA,EAAD,CAAWjC,GAAIA,EAAK,WAChBkC,MAAM,eACN3D,MAAOC,KAAKZ,MAAM2D,QAClBY,SAAU,SAAAC,GAAC,OAAI,EAAKhE,eAAe,UAAWgE,EAAEC,OAAO9D,QACvDiC,WAAS,KAGjB,0BAAM0C,MAAO,CAAE/C,MAAO,QAChB3B,KAAKZ,MAAMmF,cAAiB,6BAC5BvE,KAAKZ,MAAMmF,eAIrB,kBAACpC,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAQD,GAAIA,EAAK,gBAAiBE,QAAS1B,KAAKL,MAAOgC,MAAM,WAA7D,SAGA,kBAACF,EAAA,EAAD,CAAQD,GAAIA,EAAK,eAAgBE,QAAS1B,KAAK+J,KAAMpI,MAAM,WAA3D,e,GAnLLS,IAAMC,WA6LJ2H,G,YACjB,WAAY7K,GAAQ,IAAD,8BACf,4CAAMA,KAEDS,eAAiB,EAAKA,eAAeF,KAApB,gBAHP,E,4EAMJI,EAAKC,GAChBC,KAAKC,SAAL,eAAiBH,EAAMC,M,+BAGjB,IAAD,OAwDCiI,EAAOhI,KAAKb,MAAMmC,MAAM0F,KAAI,SAAAzH,GAAM,OArDpB,SAACA,GACjB,IAAKA,EAAOC,KACR,OAAO,KACX,IACI4I,EADEhC,EAAQ7G,EAAO6G,MAKrB,OAHIA,IACAgC,EAAWhC,EAAMF,KAAK,OAGtB,kBAACqC,EAAA,EAAD,CAAgBzI,IAAKP,EAAOC,MAC1B,kBAACgJ,EAAA,EAAD,CACEC,WAAY,kBAAC,IAAD,MACZC,gBAAc,kBACdlH,GAAG,kBAECjC,EAAOC,MAEb,kBAACmJ,EAAA,EAAD,KACI,2BAAOnH,GAAG,YACR,+BACI,4BACE,6BACA,6BACA,8BAEF,4BACE,4BAAI,oCAAJ,IAAmBjC,EAAOmD,MAC1B,4BAAI,uCAAJ,IAAsBnD,EAAOoD,SAC7B,4BAAI,uCAAJ,IAAsByF,EAAtB,MAEF,4BACE,4BAAI,uCAAJ,IAAsB7I,EAAOwD,SAC7B,4BAAI,oCAAJ,IAAmBxD,EAAOuD,WAC1B,4BAAI,mCAAJ,IAAoC,MAAlBvD,EAAOsD,OACL,OAAS,WAE/B,4BACE,4BAAI,8CAAJ,IAA6BtD,EAAO0K,YACpC,4BAAI,mDAAJ,IAAkC1K,EAAO2K,aACzC,4BAAI,mDAAJ,IAAkC3K,EAAO4K,kBAKpD,EAAKhL,MAAMsD,YACZ,kBAACmG,EAAA,EAAD,MACO,EAAKzJ,MAAMsD,WAAWnD,QAAUC,EAAOD,OAA0C,UAA/B,EAAKH,MAAMsD,WAAWjD,OAC3E,kBAAC,GAAD,CAAMgC,GAjDT,YAiDiBjC,OAAQA,EAAQa,kBAAmB,EAAKjB,MAAMiB,sBAM9BgK,CAAY7K,MAExD,OACI,oCACMyI,O,GAvEmB5F,IAAMC,WCpMrCgI,GACW,EADXA,GAEK,EAFLA,GAGO,EAsFEC,G,YAlFX,WAAYnL,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTmL,KAAM,EACN9H,gBAAYtC,EACZmB,MAAO,GACP8E,MAAO,GACPT,YAAa,IAGjB,EAAK/F,eAAiB,EAAKA,eAAeF,KAApB,gBAXP,E,4EAcJI,EAAKC,GAChBC,KAAKC,SAAL,eAAiBH,EAAMC,M,0CAIvB,IAAMH,EAAiBI,KAAKJ,eACxBgB,EAAS,IAAIC,eACjBD,EAAQE,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9C,IAAMM,EAAQZ,KAAKU,MAAMpB,KAAKmB,cAC9BvB,EAAe,QAAS0B,KAGhCV,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHmB,EAAQW,KAAK,oDAEbX,EAAS,IAAIC,gBACLC,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9C,IAAMM,EAAQZ,KAAKU,MAAMpB,KAAKmB,cAC9BvB,EAAe,QAAS0B,KAGhCV,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHmB,EAAQW,KAAK,kDAEbX,EAAS,IAAIC,gBACLC,mBAAqB,WACzB,GAAwB,IAApBd,KAAKe,YAAoC,MAAhBf,KAAKgB,OAAgB,CAC9C,IAAMM,EAAQZ,KAAKU,MAAMpB,KAAKmB,cAC9BvB,EAAe,cAAe0B,KAGtCV,EAAQnB,KAAK,OAAQ,kGAAkG,GACvHmB,EAAQW,KAAK,yD,+BAGP,IAAD,SACmDvB,KAAKZ,MAArDqD,EADH,EACGA,WAAY8H,EADf,EACeA,KAAMjJ,EADrB,EACqBA,MAAOqE,EAD5B,EAC4BA,YAAaS,EADzC,EACyCA,MAG9C,OADAnF,QAAQC,IAAIlB,KAAKZ,OAEb,yBAAKoL,UAAU,OACX,6BACI,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,EAAA,EAAD,CAAMC,aAAW,OACbjH,SAAU,SAACkH,EAAO9K,GAAR,OAAkB,EAAKH,eAAe,OAAQG,IACxDA,MAAOwK,GAEP,kBAACO,EAAA,EAAD,CAAKpH,MAAM,gBACX,kBAACoH,EAAA,EAAD,CAAKpH,MAAM,UACX,kBAACoH,EAAA,EAAD,CAAKpH,MAAM,cAGnB,kBAAC,EAAD,CAAWtD,kBAAmBJ,KAAKJ,eAAgB6C,WAAYA,KAEnE,4BAAQ+H,UAAU,YACd,yBAAKA,UAAU,eACTD,IAASF,IAAoB,kBAAC,EAAD,CAAa1E,YAAaA,EAAaS,MAAOA,EAAO9E,MAAOA,EAAOmB,WAAYA,EAAYrC,kBAAmBJ,KAAKJ,iBAChJ2K,IAASF,IAAc,kBAAC,GAAD,CAAO1E,YAAaA,EAAaS,MAAOA,EAAO9E,MAAOA,EAAOmB,WAAYA,EAAYrC,kBAAmBJ,KAAKJ,iBACpI2K,IAASF,IAAgB,kBAAC,GAAD,CAAS1E,YAAaA,EAAaS,MAAOA,EAAO9E,MAAOA,EAAOmB,WAAYA,EAAYrC,kBAAmBJ,KAAKJ,wB,GA3EhJwC,IAAMC,WCNJ0I,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.26cfde87.chunk.js","sourcesContent":["import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nclass Delete extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showModal: false,\n            email: props.player.email,\n            nick: props.player.nick,\n        };\n\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.onValueChanged = this.onValueChanged.bind(this);\n        this.delete = this.delete.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    close() {\n        this.setState({ showModal: false, dialogError: undefined });\n    }\n\n    open() {\n        this.setState({ showModal: true });\n    }\n\n    delete() {\n        const appOnValueChanged = this.props.appOnValueChanged;\n        const { email, nick } = this.state;\n        const data = { email, nick, active: 0 };\n        const call = {\n            action: \"editPlayer\",\n            arguments: data\n        };\n        const callStr = JSON.stringify(call);\n\n        const request= new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                console.log(this.responseText);\n                const response = JSON.parse(this.responseText);\n\n                if (response.result) {\n                    appOnValueChanged(\"loggedUser\", null);\n                    const request= new XMLHttpRequest();\n                    request.onreadystatechange = function() {\n                        if (this.readyState === 4 && this.status === 200) {\n                            const users = JSON.parse(this.responseText);\n                            appOnValueChanged(\"users\", users);\n                        }\n                    }\n                    request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n                    request.send('{\"action\":\"getPlayer\",\"arguments\":{\"active\":1}}');\n                }\n            }\n        }\n        request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n        console.log(callStr);\n        request.send(callStr);\n    }\n\n    render() {\n        const id = this.props.id + \"-delete-player\";\n\n        return (\n            <>\n                <Button onClick={this.open} color=\"secondary\">Delete</Button>\n                <Dialog open={this.state.showModal}\n                    onClose={this.close}\n                    aria-labelledby={id + \"-dialog\"}\n                    maxWidth={'sm'}\n                    fullWidth\n                >\n                    <DialogTitle id={id + \"-dialog-title\"}>Account Deletion</DialogTitle>\n                    <DialogContent>\n                        Do you really wish to delete your profile?\n                    </DialogContent>\n                    <DialogActions>\n                        <Button id={id + \"-action-close\"} onClick={this.close} color=\"default\">\n                            Close\n                        </Button>\n                        <Button id={id + \"-action-delete\"} onClick={this.delete} color=\"secondary\">\n                            Delete\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nclass Logout extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showModal: false,\n        };\n\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.onValueChanged = this.onValueChanged.bind(this);\n        this.logout = this.logout.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    close() {\n        this.setState({ showModal: false, dialogError: undefined });\n    }\n\n    open() {\n        this.setState({ showModal: true });\n    }\n\n    logout() {\n        this.props.appOnValueChanged(\"loggedUser\", undefined);\n    }\n\n    render() {\n        const id = this.props.id + \"-logout\";\n\n        return (\n            <>\n                <Button onClick={this.open}>\n                    Logout\n                </Button>\n                <Dialog open={this.state.showModal}\n                    onClose={this.close}\n                    aria-labelledby={id + \"-dialog\"}\n                    maxWidth={'sm'}\n                    fullWidth\n                >\n                    <DialogTitle id={id + \"-dialog-title\"}>Logout</DialogTitle>\n                    <DialogContent>\n                        Do you really wish to logout?\n                    </DialogContent>\n                    <DialogActions>\n                        <Button id={id + \"-action-close\"} onClick={this.close} color=\"default\">\n                            Close\n                        </Button>\n                        <Button id={id + \"-action-edit-profile\"} onClick={this.logout} color=\"primary\">\n                            Logout\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showModal: false,\n            email: props.loggedUser.email,\n            nick: props.loggedUser.nick,\n            name: props.loggedUser.name,\n            surname: props.loggedUser.surname,\n            password: \"\",\n            gender: props.loggedUser.gender,\n            birthDate: props.loggedUser.birthDate,\n            country: props.loggedUser.country,\n        };\n\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.onValueChanged = this.onValueChanged.bind(this);\n        this.editProfile = this.editProfile.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        if (key === \"country\" && value.length > 2)\n            value = value.substring(0, 2);\n\n        this.setState({ [key]: value });\n    }\n\n    close() {\n        this.setState({ showModal: false, dialogError: undefined });\n    }\n\n    open() {\n        this.setState({ showModal: true });\n    }\n\n    editProfile() {\n        const appOnValueChanged = this.props.appOnValueChanged;\n        const { email, nick, name, surname, password, gender, birthDate, country } = this.state;\n        const data = { email, nick, name, surname, gender, birthDate, country };\n        if (password.length > 0)\n            data.password = password;\n        const call = {\n            action: \"editPlayer\",\n            arguments: data\n        };\n        const callStr = JSON.stringify(call);\n\n        const request= new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                console.log(this.responseText);\n                const response = JSON.parse(this.responseText);\n\n                if (response.result) {\n                    const data = { email };\n                    const call = {\n                        action: \"getPlayer\",\n                        arguments: data\n                    };\n                    const callStr = JSON.stringify(call);\n                    const request= new XMLHttpRequest();\n                    request.onreadystatechange = function() {\n                        if (this.readyState === 4 && this.status === 200) {\n                            const response = JSON.parse(this.responseText);\n\n                            appOnValueChanged(\"loggedUser\", response[0]);\n                            console.log(response[0]);\n                        }\n                    }\n                    request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n                    //request.setRequestHeader(\"Content-type\", \"application/json\");\n                    request.send(callStr);\n                }\n            }\n        }\n        request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n        console.log(callStr);\n        request.send(callStr);\n    }\n\n    render() {\n        const id = this.props.id + \"=registration\";\n\n        return (\n            <>\n                <Button onClick={this.open}>\n                    Edit Profile\n                </Button>\n                <Dialog open={this.state.showModal}\n                    onClose={this.close}\n                    aria-labelledby={id + \"-dialog\"}\n                    maxWidth={'sm'}\n                    fullWidth\n                >\n                    <DialogTitle id={id + \"-dialog-title\"}>Edit Profile</DialogTitle>\n                    <DialogContent>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-email\"}\n                                label=\"Email\"\n                                value={this.state.email}\n                                onChange={e => this.onValueChanged(\"email\", e.target.value)}\n                                autoFocus\n                                margin=\"dense\"\n                                fullWidth\n                            />\n                        </Box>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-nick\"}\n                                label=\"Nick\"\n                                value={this.state.nick}\n                                onChange={e => this.onValueChanged(\"nick\", e.target.value)}\n                                fullWidth\n                            />\n                        </Box>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-name\"}\n                                label=\"Name\"\n                                value={this.state.name}\n                                onChange={e => this.onValueChanged(\"name\", e.target.value)}\n                                fullWidth\n                            />\n                        </Box>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-surname\"}\n                                label=\"Surname\"\n                                value={this.state.surname}\n                                onChange={e => this.onValueChanged(\"surname\", e.target.value)}\n                                fullWidth\n                            />\n                        </Box>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-password\"}\n                                label=\"New Password\"\n                                value={this.state.password}\n                                onChange={e => this.onValueChanged(\"password\", e.target.value)}\n                                type=\"password\"\n                                fullWidth\n                            />\n                        </Box>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-gender\"}\n                                select\n                                label=\"Gender\"\n                                value={this.state.gender}\n                                onChange={e => this.onValueChanged(\"gender\", e.target.value)}\n                                fullWidth\n                            >\n                                <MenuItem key={\"F\"} value={\"F\"}>\n                                  {\"Female\"}\n                                </MenuItem>\n                                <MenuItem key={\"M\"} value={\"M\"}>\n                                  {\"Male\"}\n                                </MenuItem>\n                            </TextField>\n                        </Box>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-birthDate\"}\n                                label=\"Date of birth\"\n                                type=\"date\"\n                                value={this.state.birthDate}\n                                onChange={e => this.onValueChanged(\"birthDate\", e.target.value)}\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                fullWidth\n                            />\n                        </Box>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-country\"}\n                                label=\"Country code\"\n                                value={this.state.country}\n                                onChange={e => this.onValueChanged(\"country\", e.target.value)}\n                                fullWidth\n                            />\n                        </Box>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button id={id + \"-action-close\"} onClick={this.close} color=\"default\">\n                            Close\n                        </Button>\n                        <Button id={id + \"-action-edit-profile\"} onClick={this.editProfile} color=\"primary\">\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showModal: false,\n            email: \"\",\n            nick: \"\",\n            password: \"\",\n            repeatPassword: \"\",\n            gender: \"\",\n            birthDate: undefined,\n            errorMessage: \"\",\n        };\n\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.onValueChanged = this.onValueChanged.bind(this);\n        this.register = this.register.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    close() {\n        this.setState({ showModal: false, dialogError: undefined });\n    }\n\n    open() {\n        this.setState({ showModal: true });\n    }\n\n    register() {\n        const onValueChanged = this.onValueChanged;\n        const close = this.close;\n        const { email, password } = this.state;\n        const data = { email, password };\n        const call = {\n            action: \"register\",\n            arguments: data\n        };\n        const callStr = JSON.stringify(call);\n\n        const request= new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                const response = JSON.parse(this.responseText);\n\n                if (response.result)\n                    close();\n                else\n                    onValueChanged(\"errorMessage\", response.message);\n\n            }\n        }\n        request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n        console.log(callStr);\n        request.send(callStr);\n    }\n\n    render() {\n        const id = this.props.id + \"=registration\";\n\n        return (\n            <>\n                <Button onClick={this.open}>\n                    Register\n                </Button>\n                <Dialog open={this.state.showModal}\n                    onClose={this.close}\n                    aria-labelledby={id + \"-dialog\"}\n                    maxWidth={'sm'}\n                    fullWidth\n                >\n                    <DialogTitle id={id + \"-dialog-title\"}>Registration</DialogTitle>\n                    <DialogContent>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-email\"}\n                                label=\"Email\"\n                                value={this.state.email}\n                                onChange={e => this.onValueChanged(\"email\", e.target.value)}\n                                autoFocus\n                                margin=\"dense\"\n                                fullWidth\n                            />\n                        </Box>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-password\"}\n                                label=\"Password\"\n                                value={this.state.password}\n                                onChange={e => this.onValueChanged(\"password\", e.target.value)}\n                                type=\"password\"\n                                fullWidth\n                            />\n                        </Box>\n                        <span style={{ color: \"red\" }}>\n                            { this.state.errorMessage && (<br />) }\n                            { this.state.errorMessage }\n                        </span>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button id={id + \"-action-close\"} onClick={this.close} color=\"default\">\n                            Close\n                        </Button>\n                        <Button id={id + \"-action-register\"} onClick={this.register} color=\"primary\">\n                            Register\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showModal: false,\n            email: \"\",\n            password: \"\"\n        };\n\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.onValueChanged = this.onValueChanged.bind(this);\n        this.login = this.login.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    close() {\n        this.setState({ showModal: false, dialogError: undefined });\n    }\n\n    open() {\n        this.setState({ showModal: true });\n    }\n\n    login() {\n        const appOnValueChanged = this.props.appOnValueChanged;\n        const { email, password } = this.state;\n        const data = { email, password };\n        const call = {\n            action: \"login\",\n            arguments: data\n        };\n        const callStr = JSON.stringify(call);\n\n        const request= new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                const response = JSON.parse(this.responseText);\n\n                if (response.result) {\n                    const data = { email };\n                    const call = {\n                        action: \"getPlayer\",\n                        arguments: data\n                    };\n                    const callStr = JSON.stringify(call);\n                    const request= new XMLHttpRequest();\n                    request.onreadystatechange = function() {\n                        if (this.readyState === 4 && this.status === 200) {\n                            console.log(this.responseText);\n                            const response = JSON.parse(this.responseText);\n\n                            appOnValueChanged(\"loggedUser\", response[0]);\n                            console.log(response[0]);\n                        }\n                    }\n                    request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n                    //request.setRequestHeader(\"Content-type\", \"application/json\");\n                    request.send(callStr);\n                }\n            }\n        }\n        request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n        //request.setRequestHeader(\"Content-type\", \"application/json\");\n        request.send(callStr);\n    }\n\n    render() {\n        const id = this.props.id + \"-login\";\n        return (\n            <>\n                <Button onClick={this.open}>\n                    Login\n                </Button>\n                <Dialog open={this.state.showModal}\n                    onClose={this.close}\n                    aria-labelledby={id + \"-modal\"}\n                    maxWidth={'sm'}\n                    fullWidth\n                >\n                    <DialogTitle id={id + \"-modal-title\"}>User Login</DialogTitle>\n                    <DialogContent>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-email\"}\n                                label=\"Email\"\n                                value={this.state.email}\n                                onChange={e => this.onValueChanged(\"email\", e.target.value)}\n                                fullWidth\n                            />\n                        </Box>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-password\"}\n                                label=\"Password\"\n                                value={this.state.password}\n                                onChange={e => this.onValueChanged(\"password\", e.target.value)}\n                                type=\"password\"\n                                fullWidth\n                            />\n                        </Box>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button id={id + \"-action-close\"} onClick={this.close} color=\"default\">\n                            Close\n                        </Button>\n                        <Button id={id + \"-action-login\"} onClick={this.login} color=\"primary\">\n                            Login\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst UserPanel = ({ appOnValueChanged, loggedUser }) => {\n    const id = \"user-panel\";\n\n    if (!loggedUser) {\n        return (\n            <Box display=\"flex\" m={1} p={1} bgcolor=\"background.paper\" css={{ float: \"right\" }}>\n                <Login id={id} appOnValueChanged={appOnValueChanged} />\n                <Register id={id} />\n            </Box>\n        );\n    }\n    return (\n        <Box display=\"flex\" m={1} p={1} bgcolor=\"background.paper\" css={{ float: \"right\" }}>\n            <EditProfile id={id} appOnValueChanged={appOnValueChanged} loggedUser={loggedUser} />\n            <Logout id={id} appOnValueChanged={appOnValueChanged} />\n            <Delete id={id} appOnValueChanged={appOnValueChanged} player={loggedUser} />\n        </Box>\n    );\n}\n\nexport default UserPanel;\n","import React from 'react';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\n\nimport './styles.css';\n\nconst TournamentBody = ({ id, state, onValueChanged }) => { \n    return (<>\n        <Box m={1} component=\"span\" display=\"block\">\n            <TextField id={id + \"-name\"}\n                label=\"Name\"\n                value={state.name}\n                onChange={e => onValueChanged(\"name\", e.target.value)}\n                fullWidth\n                />\n        </Box>\n        <Box m={1} component=\"span\" display=\"block\">\n            <TextField id={id + \"-teamSize\"}\n                label=\"Players per team\"\n                value={state.teamSize}\n                onChange={e => onValueChanged(\"teamSize\", e.target.value)}\n                type=\"number\"\n                fullWidth\n            />\n        </Box>\n        <Box m={1} component=\"span\" display=\"block\">\n            <TextField id={id + \"-capacity\"}\n                label=\"Max number of teams\"\n                value={state.capacity}\n                onChange={e => onValueChanged(\"capacity\", e.target.value)}\n                type=\"number\"\n                fullWidth\n            />\n        </Box>\n        <Box m={1} component=\"span\" display=\"block\">\n            <TextField id={id + \"-prizes\"}\n                label=\"Prizes\"\n                value={state.prizes}\n                onChange={e => onValueChanged(\"prizes\", e.target.value)}\n                fullWidth\n            />\n        </Box>\n        <Box m={1} component=\"span\" display=\"block\">\n            <TextField id={id + \"-ageCategory\"}\n                select\n                label=\"Age category\"\n                value={state.ageCategory}\n                onChange={e => onValueChanged(\"ageCategory\", e.target.value)}\n                fullWidth\n            >\n                <MenuItem key={\"Everyone\"} value={\"Everyone\"}>\n                  {\"Everyone\"}\n                </MenuItem>\n                <MenuItem key={\"Juniors\"} value={\"Juniors\"}>\n                  {\"Juniors\"}\n                </MenuItem>\n                <MenuItem key={\"Adults\"} value={\"Adults\"}>\n                  {\"Adults\"}\n                </MenuItem>\n                <MenuItem key={\"Seniors\"} value={\"Seniors\"}>\n                  {\"Seniors\"}\n                </MenuItem>\n            </TextField>\n        </Box>\n        <Box m={1} component=\"span\" display=\"block\">\n            <TextField id={id + \"-sexCategory\"}\n                select\n                label=\"Sex category\"\n                value={state.sexCategory}\n                onChange={e => onValueChanged(\"sexCategory\", e.target.value)}\n                fullWidth\n            >\n                <MenuItem key={\"N\"} value={\"N\"}>\n                  {\"All\"}\n                </MenuItem>\n                <MenuItem key={\"F\"} value={\"F\"}>\n                  {\"Female\"}\n                </MenuItem>\n                <MenuItem key={\"M\"} value={\"M\"}>\n                  {\"Male\"}\n                </MenuItem>\n            </TextField>\n        </Box>\n        <Box m={1} component=\"span\" display=\"block\">\n            <TextField id={id + \"-registrationFee\"}\n                label=\"Registration fee (eur)\"\n                value={state.registrationFee}\n                onChange={e => onValueChanged(\"registrationFee\", e.target.value)}\n                fullWidth\n                type=\"number\"\n            />\n        </Box>\n    </>);\n}\n\nclass CreateTournament extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showModal: false,\n            name: \"\",\n            capacity: 8,\n            ageCategory: \"Everyone\",\n            sexCategory: \"N\",\n            teamSize: 5,\n            prizes: \"\",\n            registrationFee: 0,\n        };\n\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.onValueChanged = this.onValueChanged.bind(this);\n        this.create = this.create.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    close() {\n        this.setState({ showModal: false, dialogError: undefined });\n    }\n\n    open() {\n        this.setState({ showModal: true });\n    }\n\n    create() {\n        const close = this.close;\n        const appOnValueChanged = this.props.appOnValueChanged;\n        const onValueChanged = this.onValueChanged;\n        const { name, capacity, ageCategory, sexCategory, teamSize, prizes, registrationFee } = this.state;\n        const data = { email: this.props.loggedUser.email, name, capacity, ageCategory, sexCategory, teamSize, prizes, registrationFee };\n        const call = {\n            action: \"createTournament\",\n            arguments: data\n        };\n        const callStr = JSON.stringify(call);\n\n        const request= new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                console.log(this.responseText);\n                const response = JSON.parse(this.responseText);\n\n                if (response.result) {\n                    const request= new XMLHttpRequest();\n                    request.onreadystatechange = function() {\n                        if (this.readyState === 4 && this.status === 200) {\n                            const tournaments = JSON.parse(this.responseText);\n                            appOnValueChanged(\"tournaments\", tournaments);\n                        }\n                    }\n                    request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n                    request.send('{\"action\":\"getTournament\",\"arguments\":{\"active\":1}}');\n                    close();\n                } else {\n                    onValueChanged(\"errorMessage\", response.message);\n                }\n            }\n        }\n        request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n        request.send(callStr);\n    }\n\n    render() {\n        const id = \"create\";\n        return (\n            <>\n                <Button onClick={this.open} variant=\"contained\" color=\"primary\">Create Tournament</Button>\n                <Dialog open={this.state.showModal}\n                    onClose={this.close}\n                    aria-labelledby={id + \"-modal\"}\n                    maxWidth={'sm'}\n                    fullWidth\n                >\n                    <DialogTitle id={id + \"-modal-title\"}>Create Tournament</DialogTitle>\n                    <DialogContent>\n                        <TournamentBody id={id}\n                            state={this.state}\n                            onValueChanged={this.onValueChanged} />\n                        <span style={{ color: \"red\" }}>\n                            { this.state.errorMessage && (<br />) }\n                            { this.state.errorMessage }\n                        </span>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button id={id + \"-action-close\"} onClick={this.close} color=\"default\">\n                            Close\n                        </Button>\n                        <Button id={id + \"-action-create\"} onClick={this.create} color=\"primary\">\n                            Create\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nclass EditTournament extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showModal: false,\n            name: props.tournament.name,\n            capacity: props.tournament.capacity,\n            ageCategory: props.tournament.ageCategory,\n            sexCategory: props.tournament.sexCategory,\n            teamSize: props.tournament.teamSize,\n            prizes: props.tournament.prizes,\n            registrationFee: props.tournament.registrationFee,\n        };\n\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.onValueChanged = this.onValueChanged.bind(this);\n        this.save = this.save.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    close() {\n        this.setState({ showModal: false, dialogError: undefined });\n    }\n\n    open() {\n        this.setState({ showModal: true });\n    }\n\n    save() {\n        const close = this.close;\n        const appOnValueChanged = this.props.appOnValueChanged;\n        const onValueChanged = this.onValueChanged;\n        const { name, capacity, ageCategory, sexCategory, teamSize, prizes, registrationFee } = this.state;\n        const data = { name: this.props.tournament.name, capacity, ageCategory, sexCategory, teamSize, prizes, registrationFee };\n        if (this.props.tournament.name !== name)\n            data.newName = name;\n        const call = {\n            action: \"editTournament\",\n            arguments: data\n        };\n        const callStr = JSON.stringify(call);\n\n        const request= new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                console.log(this.responseText);\n                const response = JSON.parse(this.responseText);\n\n                if (response.result) {\n                    const request= new XMLHttpRequest();\n                    request.onreadystatechange = function() {\n                        if (this.readyState === 4 && this.status === 200) {\n                            const tournaments = JSON.parse(this.responseText);\n                            appOnValueChanged(\"tournaments\", tournaments);\n                        }\n                    }\n                    request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n                    request.send('{\"action\":\"getTournament\",\"arguments\":{\"active\":1}}');\n                    close();\n                } else {\n                    onValueChanged(\"errorMessage\", response.message);\n                }\n            }\n        }\n        request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n        console.log(callStr);\n        request.send(callStr);\n    }\n\n    render() {\n        const id = this.props.tournament.id + \"-edit\";\n        return (\n            <>\n                <Button onClick={this.open} variant=\"contained\">Edit</Button>\n                <Dialog open={this.state.showModal}\n                    onClose={this.close}\n                    aria-labelledby={id + \"-modal\"}\n                    maxWidth={'sm'}\n                    fullWidth\n                >\n                    <DialogTitle id={id + \"-modal-title\"}>Edit Tournament Details</DialogTitle>\n                    <DialogContent>\n                        <TournamentBody id={id}\n                            state={this.state}\n                            onValueChanged={this.onValueChanged} />\n                        <span style={{ color: \"red\" }}>\n                            { this.state.errorMessage && (<br />) }\n                            { this.state.errorMessage }\n                        </span>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button id={id + \"-action-close\"} onClick={this.close} color=\"default\">\n                            Close\n                        </Button>\n                        <Button id={id + \"-action-save\"} onClick={this.save} color=\"primary\">\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nclass SignupAsReferee extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showModal: false,\n        };\n\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.onValueChanged = this.onValueChanged.bind(this);\n        this.join = this.join.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    close() {\n        this.setState({ showModal: false, dialogError: undefined });\n    }\n\n    open() {\n        this.setState({ showModal: true });\n    }\n\n    join() {\n        const close = this.close;\n        const appOnValueChanged = this.props.appOnValueChanged;\n        const onValueChanged = this.onValueChanged;\n        const data = { tournament: this.props.tournament.name, email: this.props.loggedUser.email };\n        const call = {\n            action: \"addReferee\",\n            arguments: data\n        };\n        const callStr = JSON.stringify(call);\n\n        const request= new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                console.log(this.responseText);\n                const response = JSON.parse(this.responseText);\n\n                if (response.result && response.result !== \"Error\") {\n                    const request= new XMLHttpRequest();\n                    request.onreadystatechange = function() {\n                        if (this.readyState === 4 && this.status === 200) {\n                            const tournaments = JSON.parse(this.responseText);\n                            appOnValueChanged(\"tournaments\", tournaments);\n                        }\n                    }\n                    request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n                    request.send('{\"action\":\"getTournament\",\"arguments\":{\"active\":1}}');\n                    close();\n                } else {\n                    onValueChanged(\"errorMessage\", response.message);\n                }\n            }\n        }\n        request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n        console.log(callStr);\n        request.send(callStr);\n    }\n\n    render() {\n        const id = this.props.tournament.id + \"-join\";\n        return (\n            <>\n                <Button onClick={this.open} variant=\"contained\">Sign Up as Referee</Button>\n                <Dialog open={this.state.showModal}\n                    onClose={this.close}\n                    aria-labelledby={id + \"-modal\"}\n                    maxWidth={'sm'}\n                    fullWidth\n                >\n                    <DialogTitle id={id + \"-modal-title\"}>Sign Up as a Referee</DialogTitle>\n                    <DialogContent>\n                        Join as a referee?\n                        <span style={{ color: \"red\" }}>\n                            { this.state.errorMessage && (<br />) }\n                            { this.state.errorMessage }\n                        </span>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button id={id + \"-action-close\"} onClick={this.close} color=\"default\">\n                            Close\n                        </Button>\n                        <Button id={id + \"-action-join\"} onClick={this.join} color=\"primary\">\n                            Join\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nclass JoinTournament extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showModal: false,\n            teams: props.loggedUsersTeams,\n            selected: [],\n        };\n\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.submit = this.submit.bind(this);\n        this.onValueChanged = this.onValueChanged.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    close() {\n        this.setState({ showModal: false, dialogError: undefined });\n    }\n\n    open() {\n        this.setState({ showModal: true });\n    }\n\n    submit() {\n        const close = this.close;\n        const appOnValueChanged = this.props.appOnValueChanged;\n        const onValueChanged = this.onValueChanged;\n        const data = { tournament: this.props.tournament.name, team: this.state.selected[0] };\n        const call = {\n            action: \"joinTournament\",\n            arguments: data\n        };\n        const callStr = JSON.stringify(call);\n\n        const request= new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                console.log(this.responseText);\n                const response = JSON.parse(this.responseText);\n\n                if (response.result && response.result !== \"Error\") {\n                    const request= new XMLHttpRequest();\n                    request.onreadystatechange = function() {\n                        if (this.readyState === 4 && this.status === 200) {\n                            const tournaments = JSON.parse(this.responseText);\n                            appOnValueChanged(\"tournaments\", tournaments);\n                        }\n                    }\n                    request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n                    request.send('{\"action\":\"getTournament\",\"arguments\":{\"active\":1}}');\n                    close();\n                } else {\n                    onValueChanged(\"errorMessage\", response.message);\n                }\n            }\n        }\n        request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n        console.log(callStr);\n        request.send(callStr);\n    }\n\n    render() {\n        const tournament = this.props.tournament;\n        const id = tournament.id + \"-join\";\n\n        const handleToggle = value => () => {\n          const currentIndex = this.state.selected.indexOf(value);\n          let newChecked = [...this.state.selected];\n\n          if (currentIndex === -1)\n            newChecked = [value];\n          else\n            newChecked.splice(currentIndex, 1);\n\n          this.setState({ selected: newChecked });\n        };\n\n        return (\n            <>\n                <Button onClick={this.open} variant=\"contained\" disabled={this.state.teams.length === 0}>Register Team</Button>\n                <Dialog open={this.state.showModal}\n                    onClose={this.close}\n                    aria-labelledby={id + \"-modal\"}\n                    maxWidth={'sm'}\n                    fullWidth\n                >\n                    <DialogTitle id={id + \"-modal-title\"}>Teams Requesting Participation in Tournament</DialogTitle>\n                    <DialogContent>\n                        Choose a team to sign up for a tournament:\n                        <List>\n                          {this.state.teams.map(team => {\n                            const labelId = `checkbox-list-label-${team.name}`;\n\n                            return (\n                              <ListItem key={team.name} role={undefined} dense button onClick={handleToggle(team.name)}>\n                                <ListItemText id={labelId} primary={`${team.name}`} />\n                                <ListItemSecondaryAction>\n                                  <Checkbox\n                                    edge=\"start\"\n                                    checked={this.state.selected.indexOf(team.name) !== -1}\n                                    onChange={handleToggle(team.name)}\n                                    tabIndex={-1}\n                                    disableRipple\n                                    inputProps={{ 'aria-labelledby': labelId }}\n                                  />\n                                </ListItemSecondaryAction>\n                              </ListItem>\n                            );\n                          })}\n                        </List>\n                        <span style={{ color: \"red\" }}>\n                            { this.state.errorMessage && (<br />) }\n                            { this.state.errorMessage }\n                        </span>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button id={id + \"-action-close\"} onClick={this.close} color=\"default\">\n                            Close\n                        </Button>\n                        <Button id={id + \"-action-submit\"} onClick={this.submit} color=\"primary\">\n                            Register Team\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default class Tournaments extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onValueChanged = this.onValueChanged.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    render() {\n        const TournamentPanel = (tournament) => {\n            let loggedUsersTeams = [];\n            if (this.props.loggedUser)\n                loggedUsersTeams = this.props.teams.filter(t => t.founder === this.props.loggedUser.email);\n\n            const teams = tournament.teams.map(t => t.name);\n            const teamsStr = teams.join(', ')\n\n            const referees = tournament.referees.map(t => t.email);\n            const refereesStr = referees.join(', ')\n\n            return (\n                <ExpansionPanel key={tournament.name}>\n                  <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1c-content\"\n                    id=\"panel1c-header\"\n                  >\n                      { tournament.name }\n                  </ExpansionPanelSummary>\n                  <ExpansionPanelDetails>\n                      <table id=\"my-table\">\n                        <tbody>\n                            <tr>\n                              <th></th>\n                              <th></th>\n                              <th></th>\n                            </tr>\n                            <tr>\n                              <td><b>Max number of teams:</b> { tournament.capacity }</td>\n                              <td><b>Age category:</b> { tournament.ageCategory }</td>\n                              <td><b>Sex category:</b> { tournament.sexCategory === \"M\"\n                                                         ? \"Male\" : \"Female\" }</td>\n                            </tr>\n                            <tr>\n                              <td><b>Team size:</b> { tournament.teamSize } players</td>\n                              <td><b>Prize:</b> { tournament.prizes }</td>\n                              <td><b>Registration fee:</b> { tournament.registrationFee } eur</td>\n                            </tr>\n                            <tr>\n                              <td><b>Referee(s):</b> { refereesStr }</td>\n                              <td><b>Teams:</b> { teamsStr }</td>\n                            </tr>\n                        </tbody>\n                      </table>\n                  </ExpansionPanelDetails>\n                  {this.props.loggedUser &&\n                  <ExpansionPanelActions>\n                      <JoinTournament tournament={tournament} loggedUser={this.props.loggedUser} appOnValueChanged={this.props.appOnValueChanged} loggedUsersTeams={loggedUsersTeams}/>\n                      <SignupAsReferee tournament={tournament} loggedUser={this.props.loggedUser} appOnValueChanged={this.props.appOnValueChanged}/>\n                      {((this.props.loggedUser.email === tournament.founder) || (this.props.loggedUser.nick === \"admin\")) &&\n                      <EditTournament tournament={tournament} appOnValueChanged={this.props.appOnValueChanged}/>}\n                  </ExpansionPanelActions>}\n                </ExpansionPanel>\n            );\n        };\n\n        console.log(this.props.tournaments);\n        const body = this.props.tournaments.map(tournament => TournamentPanel(tournament));\n\n        return(\n            <Grid container spacing={3}>\n                {this.props.loggedUser &&\n                <Grid item xs={12}>\n                    <Box display=\"flex\" css={{ float: \"right\" }}>\n                        <CreateTournament  loggedUser={this.props.loggedUser} appOnValueChanged={this.props.appOnValueChanged}/>\n                    </Box>\n                </Grid>}\n                <Grid item xs={12}>\n                    { body }\n                </Grid>\n            </Grid>\n        );\n    };\n}\n","import React from 'react';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nimport './styles.css';\n\nconst TeamBody = ({ id, state, onValueChanged }) => {\n    return (<>\n        <Box m={1} component=\"span\" display=\"block\">\n            <TextField id={id + \"-name\"}\n                label=\"Name\"\n                value={state.name}\n                onChange={e => onValueChanged(\"name\", e.target.value)}\n                fullWidth\n                />\n        </Box>\n        <Box m={1} component=\"span\" display=\"block\">\n        </Box>\n    </>);\n}\n\nclass CreateTeam extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showModal: false,\n            name: \"\",\n            players: [\"Afghanistan\"],\n        };\n\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.onValueChanged = this.onValueChanged.bind(this);\n        this.create = this.create.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    close() {\n        this.setState({ showModal: false, dialogError: undefined });\n    }\n\n    open() {\n        this.setState({ showModal: true });\n    }\n\n    create() {\n        const appOnValueChanged = this.props.appOnValueChanged;\n        const onValueChanged = this.onValueChanged;\n        const { name} = this.state;\n        const data = { email: this.props.loggedUser.email, name };\n        const call = {\n            action: \"createTeam\",\n            arguments: data\n        };\n        const callStr = JSON.stringify(call);\n\n        const request= new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                console.log(this.responseText);\n                const response = JSON.parse(this.responseText);\n\n                if (response.result) {\n                    const request= new XMLHttpRequest();\n                    request.onreadystatechange = function() {\n                        if (this.readyState === 4 && this.status === 200) {\n                            const teams = JSON.parse(this.responseText);\n                            appOnValueChanged(\"teams\", teams);\n                        }\n                    }\n                    request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n                    request.send('{\"action\":\"getTeam\",\"arguments\":{\"active\":1}}');\n                } else {\n                    onValueChanged(\"errorMessage\", response.message);\n                }\n            }\n        }\n        request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n        request.send(callStr);\n    }\n\n    render() {\n        const id = \"create\";\n        return (\n            <>\n                <Button onClick={this.open} variant=\"contained\" color=\"primary\">Create Team</Button>\n                <Dialog open={this.state.showModal}\n                    onClose={this.close}\n                    aria-labelledby={id + \"-modal\"}\n                    maxWidth={'sm'}\n                    fullWidth\n                >\n                    <DialogTitle id={id + \"-modal-title\"}>Create Team</DialogTitle>\n                    <DialogContent>\n                        <TeamBody id={id}\n                            state={this.state}\n                            onValueChanged={this.onValueChanged} />\n                        <span style={{ color: \"red\" }}>\n                            { this.state.errorMessage && (<br />) }\n                            { this.state.errorMessage }\n                        </span>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button id={id + \"-action-close\"} onClick={this.close} color=\"default\">\n                            Close\n                        </Button>\n                        <Button id={id + \"-action-create\"} onClick={this.create} color=\"primary\">\n                            Create\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nclass EditTeam extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showModal: false,\n            name: props.team.name,\n            players: props.team.players,\n        };\n\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.onValueChanged = this.onValueChanged.bind(this);\n        this.save = this.save.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    close() {\n        this.setState({ showModal: false, dialogError: undefined });\n    }\n\n    open() {\n        this.setState({ showModal: true });\n    }\n\n    save() {\n        const appOnValueChanged = this.props.appOnValueChanged;\n        const onValueChanged = this.onValueChanged;\n        const { name} = this.state;\n        if (name !== this.props.team.name) {\n            const data = { name: this.props.team.name, newName: name };\n            const call = {\n                action: \"editTeam\",\n                arguments: data\n            };\n            const callStr = JSON.stringify(call);\n\n            const request= new XMLHttpRequest();\n            request.onreadystatechange = function() {\n                if (this.readyState === 4 && this.status === 200) {\n                    console.log(this.responseText);\n                    const response = JSON.parse(this.responseText);\n\n                    if (response.result) {\n                        const request= new XMLHttpRequest();\n                        request.onreadystatechange = function() {\n                            if (this.readyState === 4 && this.status === 200) {\n                                const teams = JSON.parse(this.responseText);\n                                appOnValueChanged(\"teams\", teams);\n                            }\n                        }\n                        request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n                        request.send('{\"action\":\"getTeam\",\"arguments\":{\"active\":1}}');\n                    } else {\n                        onValueChanged(\"errorMessage\", response.message);\n                    }\n                }\n            }\n            request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n            console.log(callStr);\n            request.send(callStr);\n        }\n        this.close();\n    }\n\n    render() {\n        const id = this.props.team.id + \"-edit\";\n        return (\n            <>\n                <Button onClick={this.open} variant=\"contained\">Edit</Button>\n                <Dialog open={this.state.showModal}\n                    onClose={this.close}\n                    aria-labelledby={id + \"-modal\"}\n                    maxWidth={'sm'}\n                    fullWidth\n                >\n                    <DialogTitle id={id + \"-modal-title\"}>Edit Team Details</DialogTitle>\n                    <DialogContent>\n                        <TeamBody id={id}\n                            state={this.state}\n                            onValueChanged={this.onValueChanged} />\n                        <span style={{ color: \"red\" }}>\n                            { this.state.errorMessage && (<br />) }\n                            { this.state.errorMessage }\n                        </span>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button id={id + \"-action-close\"} onClick={this.close} color=\"default\">\n                            Close\n                        </Button>\n                        <Button id={id + \"-action-save\"} onClick={this.save} color=\"primary\">\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nclass LeaveTeam extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showModal: false,\n        };\n\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.onValueChanged = this.onValueChanged.bind(this);\n        this.join = this.join.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    close() {\n        this.setState({ showModal: false, dialogError: undefined });\n    }\n\n    open() {\n        this.setState({ showModal: true });\n    }\n\n    join() {\n        const appOnValueChanged = this.props.appOnValueChanged;\n        const onValueChanged = this.onValueChanged;\n        const data = { email: this.props.loggedUser.email, team: this.props.team.name };\n        const call = {\n            action: \"leaveTeam\",\n            arguments: data\n        };\n        const callStr = JSON.stringify(call);\n\n        const request= new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                console.log(this.responseText);\n                const response = JSON.parse(this.responseText);\n\n                if (response.result) {\n                    const request= new XMLHttpRequest();\n                    request.onreadystatechange = function() {\n                        if (this.readyState === 4 && this.status === 200) {\n                            const teams = JSON.parse(this.responseText);\n                            appOnValueChanged(\"teams\", teams);\n                        }\n                    }\n                    request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n                    request.send('{\"action\":\"getTeam\",\"arguments\":{\"active\":1}}');\n                } else {\n                    onValueChanged(\"errorMessage\", response.message);\n                }\n            }\n        }\n        request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n        request.send(callStr);\n    }\n\n    render() {\n        const id = this.props.team.id + \"-join\";\n        return (\n            <>\n                <Button onClick={this.open} variant=\"contained\" color=\"secondary\">Leave</Button>\n                <Dialog open={this.state.showModal}\n                    onClose={this.close}\n                    aria-labelledby={id + \"-modal\"}\n                    maxWidth={'sm'}\n                    fullWidth\n                >\n                    <DialogTitle id={id + \"-modal-title\"}>Leave Team</DialogTitle>\n                    <DialogContent>\n                        Leave this team?\n                        <span style={{ color: \"red\" }}>\n                            { this.state.errorMessage && (<br />) }\n                            { this.state.errorMessage }\n                        </span>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button id={id + \"-action-close\"} onClick={this.close} color=\"default\">\n                            Close\n                        </Button>\n                        <Button id={id + \"-action-join\"} onClick={this.join} color=\"secondary\">\n                            Leave\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nclass JoinTeam extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showModal: false,\n        };\n\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.onValueChanged = this.onValueChanged.bind(this);\n        this.join = this.join.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    close() {\n        this.setState({ showModal: false, dialogError: undefined });\n    }\n\n    open() {\n        this.setState({ showModal: true });\n    }\n\n    join() {\n        const appOnValueChanged = this.props.appOnValueChanged;\n        const onValueChanged = this.onValueChanged;\n        const data = { email: this.props.loggedUser.email, team: this.props.team.name };\n        const call = {\n            action: \"joinTeam\",\n            arguments: data\n        };\n        const callStr = JSON.stringify(call);\n\n        const request= new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                console.log(this.responseText);\n                const response = JSON.parse(this.responseText);\n\n                if (response.result) {\n                    const request= new XMLHttpRequest();\n                    request.onreadystatechange = function() {\n                        if (this.readyState === 4 && this.status === 200) {\n                            const teams = JSON.parse(this.responseText);\n                            appOnValueChanged(\"teams\", teams);\n                        }\n                    }\n                    request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n                    request.send('{\"action\":\"getTeam\",\"arguments\":{\"active\":1}}');\n                } else {\n                    onValueChanged(\"errorMessage\", response.message);\n                }\n            }\n        }\n        request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n        request.send(callStr);\n    }\n\n    render() {\n        const id = this.props.team.id + \"-join\";\n        return (\n            <>\n                <Button onClick={this.open} variant=\"contained\">Join</Button>\n                <Dialog open={this.state.showModal}\n                    onClose={this.close}\n                    aria-labelledby={id + \"-modal\"}\n                    maxWidth={'sm'}\n                    fullWidth\n                >\n                    <DialogTitle id={id + \"-modal-title\"}>Request Team Membership</DialogTitle>\n                    <DialogContent>\n                        Join this team?\n                        <span style={{ color: \"red\" }}>\n                            { this.state.errorMessage && (<br />) }\n                            { this.state.errorMessage }\n                        </span>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button id={id + \"-action-close\"} onClick={this.close} color=\"default\">\n                            Close\n                        </Button>\n                        <Button id={id + \"-action-join\"} onClick={this.join} color=\"secondary\">\n                           Join \n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default class Teams extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onValueChanged = this.onValueChanged.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    render() {\n        const TeamPanel = (team) => {\n            const players = team.players.map(p => p.nick);\n            const playersStr = players.join(\", \");\n\n            return (\n                <ExpansionPanel key={ team.name }>\n                  <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1c-content\"\n                    id=\"panel1c-header\"\n                  >\n                      { team.name }\n                  </ExpansionPanelSummary>\n                  <ExpansionPanelDetails>\n                      <table id=\"my-table\">\n                        <tbody>\n                            <tr>\n                              <th></th>\n                            </tr>\n                            <tr>\n                              <td><b>Players:</b> { playersStr }</td>\n                              <td><b>Founded:</b> { team.founded }</td>\n                            </tr>\n                        </tbody>\n                      </table>\n                  </ExpansionPanelDetails>\n                  {this.props.loggedUser &&\n                  <ExpansionPanelActions>\n                      {!players.includes(this.props.loggedUser.nick) &&\n                      <JoinTeam team={team} loggedUser={this.props.loggedUser} appOnValueChanged={this.props.appOnValueChanged}/>}\n                      {players.includes(this.props.loggedUser.nick) &&\n                      <LeaveTeam team={team} loggedUser={this.props.loggedUser} appOnValueChanged={this.props.appOnValueChanged}/>}\n                      {((this.props.loggedUser.email === team.founder) || (this.props.loggedUser.nick === \"admin\")) && <>\n                          <EditTeam team={team} appOnValueChanged={this.props.appOnValueChanged}/>\n                      </>}\n                  </ExpansionPanelActions>}\n                </ExpansionPanel>\n            );\n        };\n\n        const body = this.props.teams.map(team => TeamPanel(team));\n\n        return (\n            <Grid container spacing={3}>\n                {this.props.loggedUser &&\n                <Grid item xs={12}>\n                    <Box display=\"flex\" css={{ float: \"right\" }}>\n                        <CreateTeam loggedUser={this.props.loggedUser} appOnValueChanged={this.props.appOnValueChanged} />\n                    </Box>\n                </Grid>}\n                <Grid item xs={12}>\n                    { body }\n                </Grid>\n            </Grid>\n        );\n    };\n}\n","import React from 'react';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nimport './styles.css';\n\nclass Edit extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showModal: false,\n            email: props.player.email,\n            nick: props.player.nick,\n            name: props.player.name,\n            surname: props.player.surname,\n            password: \"\",\n            gender: props.player.gender,\n            birthDate: props.player.birthDate,\n            country: props.player.country,\n        };\n\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.onValueChanged = this.onValueChanged.bind(this);\n        this.edit = this.edit.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        if (key === \"country\" && value.length > 2)\n            value = value.substring(0, 2);\n\n        this.setState({ [key]: value });\n    }\n\n    close() {\n        this.setState({ showModal: false, dialogError: undefined });\n    }\n\n    open() {\n        this.setState({ showModal: true });\n    }\n\n    edit() {\n        const appOnValueChanged = this.props.appOnValueChanged;\n        const onValueChanged = this.onValueChanged;\n        const { email, nick, name, surname, password, gender, birthDate, country } = this.state;\n        const data = { email, nick, name, surname, gender, birthDate, country };\n        if (password.length > 0)\n            data.password = password;\n        const call = {\n            action: \"editPlayer\",\n            arguments: data\n        };\n        const callStr = JSON.stringify(call);\n\n        const request= new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                console.log(this.responseText);\n                const response = JSON.parse(this.responseText);\n\n                if (response.result) {\n                    const request= new XMLHttpRequest();\n                    request.onreadystatechange = function() {\n                        if (this.readyState === 4 && this.status === 200) {\n                            const users = JSON.parse(this.responseText);\n                            appOnValueChanged(\"users\", users);\n                        }\n                    }\n                    request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n                    request.send('{\"action\":\"getPlayer\",\"arguments\":{\"active\":1}}');\n                } else {\n                    onValueChanged(\"errorMessage\", response.message);\n                }\n            }\n        }\n        request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n        console.log(callStr);\n        request.send(callStr);\n    }\n\n    render() {\n        const id = this.props.id + \"=registration\";\n\n        return (\n            <>\n                <Button onClick={this.open} variant=\"contained\">Edit</Button>\n                <Dialog open={this.state.showModal}\n                    onClose={this.close}\n                    aria-labelledby={id + \"-dialog\"}\n                    maxWidth={'sm'}\n                    fullWidth\n                >\n                    <DialogTitle id={id + \"-dialog-title\"}>Edit User</DialogTitle>\n                    <DialogContent>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-email\"}\n                                label=\"Email\"\n                                value={this.state.email}\n                                onChange={e => this.onValueChanged(\"email\", e.target.value)}\n                                autoFocus\n                                margin=\"dense\"\n                                fullWidth\n                            />\n                        </Box>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-nick\"}\n                                label=\"Nick\"\n                                value={this.state.nick}\n                                onChange={e => this.onValueChanged(\"nick\", e.target.value)}\n                                fullWidth\n                            />\n                        </Box>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-name\"}\n                                label=\"Name\"\n                                value={this.state.name}\n                                onChange={e => this.onValueChanged(\"name\", e.target.value)}\n                                fullWidth\n                            />\n                        </Box>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-surname\"}\n                                label=\"Surname\"\n                                value={this.state.surname}\n                                onChange={e => this.onValueChanged(\"surname\", e.target.value)}\n                                fullWidth\n                            />\n                        </Box>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-password\"}\n                                label=\"New Password\"\n                                value={this.state.password}\n                                onChange={e => this.onValueChanged(\"password\", e.target.value)}\n                                type=\"password\"\n                                fullWidth\n                            />\n                        </Box>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-gender\"}\n                                select\n                                label=\"Gender\"\n                                value={this.state.gender}\n                                onChange={e => this.onValueChanged(\"gender\", e.target.value)}\n                                fullWidth\n                            >\n                                <MenuItem key={\"F\"} value={\"F\"}>\n                                  {\"Female\"}\n                                </MenuItem>\n                                <MenuItem key={\"M\"} value={\"M\"}>\n                                  {\"Male\"}\n                                </MenuItem>\n                            </TextField>\n                        </Box>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-birthDate\"}\n                                label=\"Date of birth\"\n                                type=\"date\"\n                                value={this.state.birthDate}\n                                onChange={e => this.onValueChanged(\"birthDate\", e.target.value)}\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                fullWidth\n                            />\n                        </Box>\n                        <Box m={1} component=\"span\" display=\"block\">\n                            <TextField id={id + \"-country\"}\n                                label=\"Country code\"\n                                value={this.state.country}\n                                onChange={e => this.onValueChanged(\"country\", e.target.value)}\n                                fullWidth\n                            />\n                        </Box>\n                        <span style={{ color: \"red\" }}>\n                            { this.state.errorMessage && (<br />) }\n                            { this.state.errorMessage }\n                        </span>\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button id={id + \"-action-close\"} onClick={this.close} color=\"default\">\n                            Close\n                        </Button>\n                        <Button id={id + \"-action-edit\"} onClick={this.edit} color=\"primary\">\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default class Players extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onValueChanged = this.onValueChanged.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    render() {\n        const id = \"edit-user\";\n\n        const PlayerPanel = (player) => {\n            if (!player.nick)\n                return null;\n            const teams = player.teams;\n            let teamsStr;\n            if (teams)\n                teamsStr = teams.join(\", \");\n\n            return (\n                <ExpansionPanel key={player.nick}>\n                  <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1c-content\"\n                    id=\"panel1c-header\"\n                  >\n                      { player.nick }\n                  </ExpansionPanelSummary>\n                  <ExpansionPanelDetails>\n                      <table id=\"my-table\">\n                        <tbody>\n                            <tr>\n                              <th></th>\n                              <th></th>\n                              <th></th>\n                            </tr>\n                            <tr>\n                              <td><b>Name:</b> { player.name }</td>\n                              <td><b>Surname:</b> { player.surname }</td>\n                              <td><b>Team(s):</b> { teamsStr } </td>\n                            </tr>\n                            <tr>\n                              <td><b>Country:</b> { player.country }</td>\n                              <td><b>Born:</b> { player.birthDate }</td>\n                              <td><b>Sex:</b> { player.gender === \"M\"\n                                                ? \"Male\" : \"Female\" }</td>\n                            </tr>\n                            <tr>\n                              <td><b>Referee rating:</b> { player.refereeRat }</td>\n                              <td><b>Current player rank:</b> { player.actualPRank }</td>\n                              <td><b>Highest player rank:</b> { player.highestPRank }</td>\n                            </tr>\n                        </tbody>\n                      </table>\n                  </ExpansionPanelDetails>\n                  {this.props.loggedUser &&\n                  <ExpansionPanelActions>\n                      {((this.props.loggedUser.email === player.email) || (this.props.loggedUser.nick === \"admin\")) &&\n                      <Edit id={id} player={player} appOnValueChanged={this.props.appOnValueChanged} />}\n                  </ExpansionPanelActions>}\n                </ExpansionPanel>\n            );\n        };\n\n        const body = this.props.users.map(player => PlayerPanel(player));\n\n        return(\n            <>\n                { body }\n            </>\n        );\n    };\n}\n","import React from 'react';\nimport './App.css';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport UserPanel from './userPanel.js';\nimport Tournaments from './Tournaments.js';\nimport Teams from './Teams.js';\nimport Players from './Players.js';\n\nconst menu = { // index of menu items\n    TOURNAMENTS: 0,\n    TEAMS: 1,\n    PLAYERS: 2,\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            page: 0,\n            loggedUser: undefined,\n            users: [],\n            teams: [],\n            tournaments: [],\n        };\n\n        this.onValueChanged = this.onValueChanged.bind(this);\n    }\n\n    onValueChanged(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    componentDidMount() {\n        const onValueChanged = this.onValueChanged;\n        let request= new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                const users = JSON.parse(this.responseText);\n                onValueChanged(\"users\", users);\n            }\n        }\n        request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n        request.send('{\"action\":\"getPlayer\",\"arguments\":{\"active\":1}}');\n\n        request= new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                const users = JSON.parse(this.responseText);\n                onValueChanged(\"teams\", users);\n            }\n        }\n        request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n        request.send('{\"action\":\"getTeam\",\"arguments\":{\"active\":1}}');\n\n        request= new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                const users = JSON.parse(this.responseText);\n                onValueChanged(\"tournaments\", users);\n            }\n        }\n        request.open(\"POST\", \"https://cors-anywhere.herokuapp.com/http://www.stud.fit.vutbr.cz/~xholas09/IIS/backend_api.php\", true);\n        request.send('{\"action\":\"getTournament\",\"arguments\":{\"active\":1}}');\n    }\n\n    render() {\n        const { loggedUser, page, users, tournaments, teams } = this.state;\n\n        console.log(this.state);\n        return (\n            <div className=\"App\">\n                <div>\n                    <AppBar position=\"static\">\n                        <Tabs aria-label=\"menu\"\n                            onChange={(event, value) => this.onValueChanged(\"page\", value)}\n                            value={page}\n                        >\n                            <Tab label=\"Tournaments\" />\n                            <Tab label=\"Teams\" />\n                            <Tab label=\"Players\" />\n                        </Tabs>\n                    </AppBar>\n                    <UserPanel appOnValueChanged={this.onValueChanged} loggedUser={loggedUser} />\n                </div>\n                <header className=\"App-page\">\n                    <div className=\"App-content\">\n                        { page === menu.TOURNAMENTS && <Tournaments tournaments={tournaments} teams={teams} users={users} loggedUser={loggedUser} appOnValueChanged={this.onValueChanged} /> }\n                        { page === menu.TEAMS && <Teams tournaments={tournaments} teams={teams} users={users} loggedUser={loggedUser} appOnValueChanged={this.onValueChanged} /> }\n                        { page === menu.PLAYERS && <Players tournaments={tournaments} teams={teams} users={users} loggedUser={loggedUser} appOnValueChanged={this.onValueChanged} /> }\n                    </div>\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}